label: ttV_Nov14
output label: ttV_Nov14
luminosity: 19450.0
input_trees_directory: tree_files
output directory: histos/4l_ttZ_studies_4l_lepCut
limits output directory: histos/4l_ttZ_studies_4l_lepCut_forLimits

#options
skip systematics: true
limits skip systematics: false

#cuts
common cuts:
    cleanup: min_mass_leplep_all > 12
    4_leptons: numAllLeptons >= 4
    z_selection: abs(ZLike_mass_leplep_SFOS_all-91.0) < 10
    lepton_pt: all_leptons_by_pt_1_pt > 20 && all_leptons_by_pt_2_pt > 10 && all_leptons_by_pt_3_pt > 10 && all_leptons_by_pt_4_pt > 10
    lepCSV: all_leptons_by_pt_1_lepCut > -1 && all_leptons_by_pt_2_lepCut > -1 && all_leptons_by_pt_3_lepCut > -1 && all_leptons_by_pt_4_lepCut > -1
    4loose: all_leptons_by_pt_1_lepCut >= 1 && all_leptons_by_pt_2_lepCut >= 1 && all_leptons_by_pt_3_lepCut >= 1 && all_leptons_by_pt_4_lepCut >= 1
    tight_charge: all_leptons_by_pt_1_CERN_tight_charge == 1 && all_leptons_by_pt_2_CERN_tight_charge == 1 && all_leptons_by_pt_3_CERN_tight_charge == 1 && all_leptons_by_pt_4_CERN_tight_charge == 1
    ##Not a common cut - for ZZ studies only
    #2_SFOS_pairs: ZLike_mass_leplep_SFOS_all > 0 && ZLike_mass_leplep_SFOS_all_2 > 0

jet tag categories:
#     #ge0j_presel: ['numJets >= 0']
#     ge0j: ['numJets >= 0']
#     ge0j_Zmask_Zmask: ['numJets >= 0 && abs(ZLike_mass_leplep_SFOS_all-91.0) > 10']
#     ge0j_Zpeak_Zmask: ['numJets >= 0 && abs(ZLike_mass_leplep_SFOS_all-91.0) < 10 && abs(ZLike_mass_leplep_SFOS_all_2-91.0) > 10']
    ge0j_Zpeak_Zpeak: ['numJets >= 0 && abs(ZLike_mass_leplep_SFOS_all-91.0) < 10 && abs(ZLike_mass_leplep_SFOS_all_2-91.0) < 10']
    
#     ge1j_Zpeak_mht30_1bloose: ['numJets >= 1  && abs(ZLike_mass_leplep_SFOS_all_2-91.0) < 10 && mht > 30 && numLooseBJets >= 1']
#     ge1j_Zmask_mht30_1bloose: ['numJets >= 1  && abs(ZLike_mass_leplep_SFOS_all_2-91.0) > 10 && mht > 30 && numLooseBJets >= 1']

#     ge1j_Zpeak_mht30_ge1t: ['numJets >= 1  && abs(ZLike_mass_leplep_SFOS_all_2-91.0) < 10 && mht > 30 && numMediumBJets >= 1']
#     ge1j_Zmask_mht30_ge1t: ['numJets >= 1  && abs(ZLike_mass_leplep_SFOS_all_2-91.0) > 10 && mht > 30 && numMediumBJets >= 1']

lepton categories:
#     mu_mu:
#         data samples: [inclusive_data]
#         cuts:
#             mu_mu: 'all_nonZ_leptons_by_pt_1_isMuon && all_nonZ_leptons_by_pt_2_isMuon'
#             trigger: '((dataset == "MC" && (isDoubleMuTriggerPass || isDoubleMuTriggerPass || isMuEGTriggerPass || isTripleElectronTriggerPass)) ||
#                 (dataset == "DoubleMu" && isDoubleMuTriggerPass) ||
#                 (dataset == "DoubleElectron" && (!isDoubleMuTriggerPass) && (isDoubleElectronTriggerPass || isTripleElectronTriggerPass)) ||
#                 (dataset == "MuEG" && (!isDoubleMuTriggerPass) && (!isDoubleElectronTriggerPass) && (!isTripleElectronTriggerPass) && isMuEGTriggerPass))'
# # #     mu_ele:
# # #         data samples: [MuEG]
# # #         cuts:
# # #             mu_ele: numAllMuons == numAllElectrons
# # #             isMuEGTriggerPass: isMuEGTriggerPass
#     ele_ele:
#         data samples: [inclusive_data]
#         cuts:
#             ele_ele: '!all_nonZ_leptons_by_pt_1_isMuon && !all_nonZ_leptons_by_pt_2_isMuon'
#             trigger: '((dataset == "MC" && (isDoubleMuTriggerPass || isDoubleMuTriggerPass || isMuEGTriggerPass || isTripleElectronTriggerPass)) ||
#                 (dataset == "DoubleMu" && isDoubleMuTriggerPass) ||
#                 (dataset == "DoubleElectron" && (!isDoubleMuTriggerPass) && (isDoubleElectronTriggerPass || isTripleElectronTriggerPass)) ||
#                 (dataset == "MuEG" && (!isDoubleMuTriggerPass) && (!isDoubleElectronTriggerPass) && (!isTripleElectronTriggerPass) && isMuEGTriggerPass))'
    4l:
        data samples: [inclusive_data]
        cuts:
            trigger: '((dataset == "MC" && (isDoubleMuTriggerPass || isDoubleMuTriggerPass || isMuEGTriggerPass || isTripleElectronTriggerPass)) ||
                (dataset == "DoubleMu" && isDoubleMuTriggerPass) ||
                (dataset == "DoubleElectron" && (!isDoubleMuTriggerPass) && (isDoubleElectronTriggerPass || isTripleElectronTriggerPass)) ||
                (dataset == "MuEG" && (!isDoubleMuTriggerPass) && (!isDoubleElectronTriggerPass) && (!isTripleElectronTriggerPass) && isMuEGTriggerPass))'

weights:
    - RecoIDIsoSIPSF_4lep
    - weight_PU
    - topPtWgt
    - csvWgtlf
    - csvWgthf
    - triggerSF
    - lepCutLoose4LepSF
    - tightCharge4LepSF

systematics:
    - nominal
    - JESUp
    - JESDown
    - weight_PUUp
    - weight_PUDown
    - topPtWgtUp
    - topPtWgtDown
    - csvWgtlf_HFUp
    - csvWgtlf_HFDown
    - csvWgtlf_Stats1Up
    - csvWgtlf_Stats1Down
    - csvWgtlf_Stats2Up
    - csvWgtlf_Stats2Down
    - csvWgthf_LFUp
    - csvWgthf_LFDown
    - csvWgthf_Stats1Up
    - csvWgthf_Stats1Down
    - csvWgthf_Stats2Up
    - csvWgthf_Stats2Down
    - csvWgtc_Err1Up
    - csvWgtc_Err1Down
    - csvWgtc_Err2Up
    - csvWgtc_Err2Down
                                                                    

#weights: all ---> weight by everything in "weights" section above
#weights: none ---> don't apply any weight
#weights: all+weight1 ---> weight by everything in the "weights" section above, and also by weight1
#weights: all+weight1-weight2 ---> weight by everything in the "weights" section above except for weight2, and also by weight1
#weights: weight1+weight2 ---> weight only by weight1 and weight2
#same idea for systematics
samples:
    ttH125:
    ## WZ is scaled by 2.0 for non-prompt yield, 1.4 for zjets yields
    wz_lll:
        weights: ['common', '( 1.0+ 0.4*(numJets == 3) + 0.6*(numJets >= 4) )*2.0*1.4']
    wz_lf_lll:
        weights: ['common', '( 1.0+ 0.4*(numJets == 3) + 0.6*(numJets >= 4) )*2.0*1.4']
    wz_cc_lll:
        weights: ['common', '( 1.0+ 0.4*(numJets == 3) + 0.6*(numJets >= 4) )*2.0*1.4']
    wz_b_lll:
        weights: ['common', '( 1.0+ 0.4*(numJets == 3) + 0.6*(numJets >= 4) )*2.0*1.4']
    wz_bb_lll:
        weights: ['common', '( 1.0+ 0.4*(numJets == 3) + 0.6*(numJets >= 4) )*2.0*1.4']
    zz_llll:
        weights: ['common', '( 1.0+ 0.4*(numJets == 3) + 0.6*(numJets >= 4) )']
    zz_lowmll:
        weights: ['common', '( 1.0+ 0.4*(numJets == 3) + 0.6*(numJets >= 4) )']
    zz_lf_llll:
        weights: ['common', '( 1.0+ 0.4*(numJets == 3) + 0.6*(numJets >= 4) )']
    zz_cc_llll:
        weights: ['common', '( 1.0+ 0.4*(numJets == 3) + 0.6*(numJets >= 4) )']
    zz_b_llll:
        weights: ['common', '( 1.0+ 0.4*(numJets == 3) + 0.6*(numJets >= 4) )']
    zz_bb_llll:
        weights: ['common', '( 1.0+ 0.4*(numJets == 3) + 0.6*(numJets >= 4) )']
    www:
    wwz:
    ## Z and ttbar are scaled by 2.0 twice for two non-prompt leptons
    zjets_0p:
        tree sample: zjets
        additional cuts: ['numExtraPartons == 0']
        weights: ['common', '2.0*2.0']
    zjets_1p:
        weights: ['common', '2.0*2.0']
    zjets_2p:
        weights: ['common', '2.0*2.0']
    zjets_3p:
        weights: ['common', '2.0*2.0']
    zjets_4p:
        weights: ['common', '2.0*2.0']
    ttbar_ll:
        weights: ['common', '2.0*2.0']
    ttbarW:
    ttbarWW:
    ttbarZ:
    ttbarG:
    ttbarGStar_ee:
    ttbarGStar_mm:
    ttbarGStar_tt:
    tbZ_ll:
    inclusive_data:
        weights: none
        systematics: nominal
    DoubleMu:
        weights: none
        systematics: nominal
    DoubleElectron:
        weights: none
        systematics: nominal

aliases:
    - &default_num_bins 10

distributions:
    numAllMuons:
        expression: numAllMuons
        axis labels: ['number of muons', Events]
        binning: [5, -0.5, 4.5]

    numAllNonZMuons:
        expression: ( (all_nonZ_leptons_by_pt_1_isMuon == 1) + (all_nonZ_leptons_by_pt_2_isMuon == 1) )
        axis labels: ['number of non-Z muons', Events]
        binning: [3, -0.5, 2.5]

    numExtraPartons:
        expression: numExtraPartons
        axis labels: ['number of extra partons', Events]
        binning: [5, -0.5, 4.5]

    numJets:
        expression: numJets
        axis labels: ['number of jets', Events]
        binning: [8, -0.5, 7.5]

    numLooseBJets:
        expression: min(2, numLooseBJets)
        axis labels: ['number of loose b-tagged jets', Events]
        binning: [2, 0.5, 2.5]

    numLooseBJets_blind:
        expression: min(2, numLooseBJets)
        axis labels: ['number of loose b-tagged jets', Events]
        binning: [1, 0.5, 1.5]

    numMediumBJets:
        expression: min(2, numMediumBJets)
        axis labels: ['number of medium b-tagged jets', Events]
        binning: [3, -0.5, 2.5]

    numMediumBJets_blind:
        expression: min(2, numMediumBJets)
        axis labels: ['number of medium b-tagged jets', Events]
        binning: [1, -0.5, 0.5]

    numTightBJets:
        expression: numTightBJets
        axis labels: ['number of tight b-tagged jets', Events]
        binning: [4, -0.5, 3.5]

    mass_of_leptons:
        expression: mass_of_leptons
        axis labels: ['Mass of all leptons', Events]
        binning: [*default_num_bins, 0, 400]

    all_Z_leptons_by_pt_1_pt:
        expression: all_Z_leptons_by_pt_1_pt
        axis labels: ['First Z lepton pT', Events]
        binning: [*default_num_bins, 0, 300]

#     all_Z_leptons_by_pt_1_pt_med:
#         expression: all_Z_leptons_by_pt_1_pt
#         axis labels: ['First Z lepton pT', Events]
#         binning: [*default_num_bins, 0, 100]

#     all_Z_leptons_by_pt_1_pt_low:
#         expression: all_Z_leptons_by_pt_1_pt
#         axis labels: ['First Z lepton pT', Events]
#         binning: [*default_num_bins, 0, 40]

    all_Z_leptons_by_pt_2_pt:
        expression: all_Z_leptons_by_pt_2_pt
        axis labels: ['Second Z lepton pT', Events]
        binning: [*default_num_bins, 0, 100]

#     all_Z_leptons_by_pt_2_pt_med:
#         expression: all_Z_leptons_by_pt_2_pt
#         axis labels: ['Second Z lepton pT', Events]
#         binning: [*default_num_bins, 0, 50]

#     all_Z_leptons_by_pt_2_pt_low:
#         expression: all_Z_leptons_by_pt_2_pt
#         axis labels: ['Second Z lepton pT', Events]
#         binning: [*default_num_bins, 0, 30]

    all_nonZ_leptons_by_pt_1_pt:
        expression: all_nonZ_leptons_by_pt_1_pt
        axis labels: ['First non-Z lepton pT', Events]
        binning: [*default_num_bins, 0, 200]

#     all_nonZ_leptons_by_pt_1_pt_med:
#         expression: all_nonZ_leptons_by_pt_1_pt
#         axis labels: ['First non-Z lepton pT', Events]
#         binning: [*default_num_bins, 0, 100]

#     all_nonZ_leptons_by_pt_1_pt_low:
#         expression: all_nonZ_leptons_by_pt_1_pt
#         axis labels: ['First non-Z lepton pT', Events]
#         binning: [*default_num_bins, 0, 40]

    all_nonZ_leptons_by_pt_2_pt:
        expression: all_nonZ_leptons_by_pt_2_pt
        axis labels: ['Second non-Z lepton pT', Events]
        binning: [*default_num_bins, 0, 100]

#     all_nonZ_leptons_by_pt_2_pt_med:
#         expression: all_nonZ_leptons_by_pt_2_pt
#         axis labels: ['Second non-Z lepton pT', Events]
#         binning: [*default_num_bins, 0, 50]

#     all_nonZ_leptons_by_pt_2_pt_low:
#         expression: all_nonZ_leptons_by_pt_2_pt
#         axis labels: ['Second non-Z lepton pT', Events]
#         binning: [*default_num_bins, 0, 30]

    min_nonZ_lepton_eta:
        expression: min(abs(all_nonZ_leptons_by_pt_1_eta), abs(all_nonZ_leptons_by_pt_2_eta))
        axis labels: ['Min non-Z lepton eta', Events]
        binning: [*default_num_bins, 0, 2.5]

    max_nonZ_lepton_eta:
        expression: max(abs(all_nonZ_leptons_by_pt_1_eta), abs(all_nonZ_leptons_by_pt_2_eta))
        axis labels: ['Max non-Z lepton eta', Events]
        binning: [*default_num_bins, 0, 2.5]

# #     all_nonZ_leptons_by_pt_1_eta:
# #         expression: abs(all_nonZ_leptons_by_pt_1_eta)
# #         axis labels: ['Non-Z lepton eta', Events]
# #         binning: [*default_num_bins, 0, 2.5]

# #     all_nonZ_leptons_by_pt_1_jetBTagCSV:
# #         expression: abs(all_nonZ_leptons_by_pt_1_jetBTagCSV)
# #         axis labels: ['Non-Z lepton jetBTagCSV', Events]
# #         binning: [*default_num_bins, 0, 1]

    jets_by_pt_1_pt:
        expression: jets_by_pt_1_pt
        axis labels: ['First jet pT', Events]
        binning: [*default_num_bins, 20, 300]

    jets_by_pt_2_pt:
        expression: jets_by_pt_2_pt
        axis labels: ['Second jet pT', Events]
        binning: [*default_num_bins, 20, 250]

    ## Should add max jet eta

#     min_mass_leplep_all:
#         expression: min_mass_leplep_all
#         axis labels: ['min dilepton mass', Events]
#         binning: [*default_num_bins, 10, 110]

    ZLike_mass_leplep_SFOS_all:
        expression: ZLike_mass_leplep_SFOS_all
        axis labels: ['Z mass', Events]
        binning: [*default_num_bins, 76.0, 106.0]

    ZLike_mass_leplep_SFOS_all_narrow:
        expression: ZLike_mass_leplep_SFOS_all
        axis labels: ['Z mass', Events]
        binning: [*default_num_bins, 81.0, 101.0]

#     ZLike_mass_leplep_SFOS_all_med:
#         expression: ZLike_mass_leplep_SFOS_all
#         axis labels: ['Z mass', Events]
#         binning: [24, 0, 120]

#     ZLike_mass_leplep_SFOS_all_low:
#         expression: ZLike_mass_leplep_SFOS_all
#         axis labels: ['Z mass', Events]
#         binning: [20, 0, 40]

    ZLike_pt_leplep_SFOS_all:
        expression: ZLike_pt_leplep_SFOS_all
        axis labels: ['Z pt', Events]
        binning: [*default_num_bins, 0, 300]

    ZLike_pt_leplep_SFOS_all_low:
        expression: ZLike_pt_leplep_SFOS_all
        axis labels: ['Z pt', Events]
        binning: [*default_num_bins, 0, 100]

    ZLike_eta_leplep_SFOS_all:
        expression: ZLike_eta_leplep_SFOS_all
        axis labels: ['Z eta', Events]
        binning: [*default_num_bins, -5, 5]

    ZLike_mass_leplep_SFOS_all_2:
        expression: ZLike_mass_leplep_SFOS_all_2
        axis labels: ['Z mass', Events]
        binning: [*default_num_bins, 0, 300]

    ZLike_mass_leplep_SFOS_all_2_narrow:
        expression: ZLike_mass_leplep_SFOS_all_2
        axis labels: ['Z mass', Events]
        binning: [*default_num_bins, 81.0, 101.0]

#     ZLike_mass_leplep_SFOS_all_2_med:
#         expression: ZLike_mass_leplep_SFOS_all_2
#         axis labels: ['Z mass', Events]
#         binning: [24, 0, 120]

#     ZLike_mass_leplep_SFOS_all_2_low:
#         expression: ZLike_mass_leplep_SFOS_all_2
#         axis labels: ['Z mass', Events]
#         binning: [20, 0, 40]

    met_pt:
        expression: met_pt
        axis labels: ['MET', Events]
        binning: [*default_num_bins, 0, 200]

#     met_pt_low:
#         expression: met_pt
#         axis labels: ['MET', Events]
#         binning: [*default_num_bins, 0, 60]

    mht:
        expression: mht
        axis labels: ['MHT', Events]
        binning: [*default_num_bins, 0, 200]

#     mht_low:
#         expression: mht
#         axis labels: ['MHT', Events]
#         binning: [*default_num_bins, 0, 60]

    met_ld:
        expression: met_pt*0.6 + mht*0.4
        axis labels: ['MetLD', Events]
        binning: [*default_num_bins, 0, 200]
        
#     met_ld_low:
#         expression: met_pt*0.6 + mht*0.4
#         axis labels: ['MetLD', Events]
#         binning: [*default_num_bins, 0, 60]
        
    sum_pt:
        expression: sum_pt
        axis labels: ['Sum pT', Events]
        binning: [*default_num_bins, 0, 1200]

    sum_jet_pt:
        expression: sum_jet_pt
        axis labels: ['Sum jet pT', Events]
        binning: [*default_num_bins, 0, 1000]

    mass_of_jets:
        expression: mass_of_jets
        axis labels: ['Mass of all jets', Events]
        binning: [*default_num_bins, 0, 1000]


limits distributions:
#     twoBins:
#         expression: all_Z_leptons_by_pt_1_eta
#         axis labels: ['first Z lepton eta', Events]
#         binning: [2, -5, 5]

    numMediumBJets:
        expression: min(2, numMediumBJets)
        axis labels: ['number of medium b-tagged jets', Events]
        binning: [3, -0.5, 2.5]
        
    numMediumBJets_blind:
        expression: min(2, numMediumBJets)
        axis labels: ['number of medium b-tagged jets', Events]
        binning: [1, -0.5, 0.5]
        
    numLooseBJets:
        expression: min(2, numLooseBJets)
        axis labels: ['number of loose b-tagged jets', Events]
        binning: [2, 0.5, 2.5]
        
    numLooseBJets_blind:
        expression: min(2, numLooseBJets)
        axis labels: ['number of loose b-tagged jets', Events]
        binning: [1, 0.5, 1.5]
        
