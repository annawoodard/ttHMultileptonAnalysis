label: ttV_Nov14
output label: ttV_Nov14_noJetScale
luminosity: 19450.0
input_trees_directory: tree_files
output directory: histos/3l_ttZ_studies_2t_lepCut
limits output directory: histos/3l_ttZ_studies_2t_lepCut_forLimits

#options
skip systematics: true
limits skip systematics: false

#cuts
common cuts:
    cleanup: min_mass_leplep_all > 12
    3_leptons: numAllLeptons == 3
    z_selection: abs(ZLike_mass_leplep_SFOS_all-91.0) < 10
    lepton_pt: all_leptons_by_pt_1_pt > 20 && all_leptons_by_pt_2_pt > 10 && all_leptons_by_pt_3_pt > 10
    lepCSV: all_SS_leptons_by_pt_1_lepCut > -1 && all_SS_leptons_by_pt_2_lepCut > -1 && all_OS_leptons_by_pt_1_lepCut > -1
    2tight: all_SS_leptons_by_pt_1_lepCut == 2 && all_SS_leptons_by_pt_2_lepCut == 2    
    right_charge: abs(all_leptons_by_pt_1_tkCharge+all_leptons_by_pt_2_tkCharge+all_leptons_by_pt_3_tkCharge) == 1
    tight_charge: all_SS_leptons_by_pt_1_CERN_tight_charge == 1 && all_SS_leptons_by_pt_2_CERN_tight_charge == 1
    
jet tag categories:

#     eq0j_lowMet: ['numJets == 0 && met_pt*0.6 + mht*0.4 < 30 && WLike_MT_met_lep < 40']
#     eq1j_lowMet: ['numJets == 1 && met_pt*0.6 + mht*0.4 < 30 && WLike_MT_met_lep < 40']
#     eq2j_lowMet: ['numJets == 2 && met_pt*0.6 + mht*0.4 < 30 && WLike_MT_met_lep < 40']

#     eq3j_lf: ['numJets == 3 && numLooseBJets < 2 && numMediumBJets == 0']
#     ge4j_lf: ['numJets >= 4 && numLooseBJets < 2 && numMediumBJets == 0']
#     eq3j_bloose: ['numJets == 3 && (numLooseBJets >= 2 || numMediumBJets >= 1)']
#     ge4j_bloose: ['numJets >= 4 && (numLooseBJets >= 2 || numMediumBJets >= 1)']

# #     le2j_lowMet: ['numJets <= 2 && met_pt*0.6 + mht*0.4 < 30 && WLike_MT_met_lep < 40']
# #     le2j_hiMet: ['numJets <= 2 && met_pt*0.6 + mht*0.4 > 40']

    ge0j_hiMet_lf: ['numJets >= 0 && met_pt*0.6 + mht*0.4 > 40 && ( (numJets < 3) || (numLooseBJets < 2 && numMediumBJets == 0) )']
    ge3j_hiMet_lf: ['numJets >= 3 && met_pt*0.6 + mht*0.4 > 40 && numLooseBJets < 2 && numMediumBJets == 0']

#     #eq0j_hiMet: ['numJets == 0 && met_pt*0.6 + mht*0.4 > 40']
#     #eq1j_hiMet: ['numJets == 1 && met_pt*0.6 + mht*0.4 > 40']
#     #eq2j_hiMet: ['numJets == 2 && met_pt*0.6 + mht*0.4 > 40']
#     #eq3j_hiMet_lf: ['numJets == 3 && met_pt*0.6 + mht*0.4 > 40 && numLooseBJets < 2 && numMediumBJets == 0']
#     #ge4j_hiMet_lf: ['numJets >= 4 && met_pt*0.6 + mht*0.4 > 40 && numLooseBJets < 2 && numMediumBJets == 0']

lepton categories:
#     mu_mu:
#         data samples: [inclusive_data]
#         cuts:
#             mu_mu: all_nonZ_leptons_by_pt_1_isMuon == 1
#             #isDoubleMuTriggerPass: isDoubleMuTriggerPass
#             trigger: '((dataset == "MC" && (isDoubleMuTriggerPass || isDoubleMuTriggerPass || isMuEGTriggerPass || isTripleElectronTriggerPass)) ||
#                 (dataset == "DoubleMu" && isDoubleMuTriggerPass) ||
#                 (dataset == "DoubleElectron" && (!isDoubleMuTriggerPass) && (isDoubleElectronTriggerPass || isTripleElectronTriggerPass)) ||
#                 (dataset == "MuEG" && (!isDoubleMuTriggerPass) && (!isDoubleElectronTriggerPass) && (!isTripleElectronTriggerPass) && isMuEGTriggerPass))'
#     ele_ele:
#         data samples: [inclusive_data]
#         cuts:
#             ele_ele: all_nonZ_leptons_by_pt_1_isMuon == 0
#             #isDoubleElectronTriggerPass: isDoubleElectronTriggerPass
#             trigger: '((dataset == "MC" && (isDoubleMuTriggerPass || isDoubleMuTriggerPass || isMuEGTriggerPass || isTripleElectronTriggerPass)) ||
#                 (dataset == "DoubleMu" && isDoubleMuTriggerPass) ||
#                 (dataset == "DoubleElectron" && (!isDoubleMuTriggerPass) && (isDoubleElectronTriggerPass || isTripleElectronTriggerPass)) ||
#                 (dataset == "MuEG" && (!isDoubleMuTriggerPass) && (!isDoubleElectronTriggerPass) && (!isTripleElectronTriggerPass) && isMuEGTriggerPass))'
                
    3l:
        data samples: [inclusive_data]
        cuts:
            trigger: '((dataset == "MC" && (isDoubleMuTriggerPass || isDoubleMuTriggerPass || isMuEGTriggerPass || isTripleElectronTriggerPass)) ||
                (dataset == "DoubleMu" && isDoubleMuTriggerPass) ||
                (dataset == "DoubleElectron" && (!isDoubleMuTriggerPass) && (isDoubleElectronTriggerPass || isTripleElectronTriggerPass)) ||
                (dataset == "MuEG" && (!isDoubleMuTriggerPass) && (!isDoubleElectronTriggerPass) && (!isTripleElectronTriggerPass) && isMuEGTriggerPass))'

weights:
    - RecoIDIsoSIPSF_3lep
    - weight_PU
    - csvWgtlf
    - csvWgthf
    - triggerSF ##Do we even need a trigger SF?
    #- lepCutTight3LepSF
    - lepCutTightSF_SS_Lep1
    - lepCutTightSF_SS_Lep2
    - tightChargeSF_SS_Lep1
    - tightChargeSF_SS_Lep2

systematics:
    - nominal
    - JESUp
    - JESDown
    - weight_PUUp
    - weight_PUDown
    - csvWgtlf_HFUp
    - csvWgtlf_HFDown
    - csvWgtlf_Stats1Up
    - csvWgtlf_Stats1Down
    - csvWgtlf_Stats2Up
    - csvWgtlf_Stats2Down
    - csvWgthf_LFUp
    - csvWgthf_LFDown
    - csvWgthf_Stats1Up
    - csvWgthf_Stats1Down
    - csvWgthf_Stats2Up
    - csvWgthf_Stats2Down
    - csvWgtc_Err1Up
    - csvWgtc_Err1Down
    - csvWgtc_Err2Up
    - csvWgtc_Err2Down
                                                                

#weights: all ---> weight by everything in "weights" section above
#weights: none ---> don't apply any weight
#weights: all+weight1 ---> weight by everything in the "weights" section above, and also by weight1
#weights: all+weight1-weight2 ---> weight by everything in the "weights" section above except for weight2, and also by weight1
#weights: weight1+weight2 ---> weight only by weight1 and weight2
#same idea for systematics
samples:
    #VH_TauMu:
    ttH125:
    wz_lll:
        #weights: ['common', '( 1.0+ 0.4*(numJets == 3) + 0.6*(numJets >= 4) )']
    wz_lf_lll:
        #weights: ['common', '( 1.0+ 0.4*(numJets == 3) + 0.6*(numJets >= 4) )']
    wz_cc_lll:
        #weights: ['common', '( 1.0+ 0.4*(numJets == 3) + 0.6*(numJets >= 4) )']
    wz_b_lll:
        #weights: ['common', '( 1.0+ 0.4*(numJets == 3) + 0.6*(numJets >= 4) )']
    wz_bb_lll:
        #weights: ['common', '( 1.0+ 0.4*(numJets == 3) + 0.6*(numJets >= 4) )']
    zz_llll:
        #weights: ['common', '( 1.0+ 0.4*(numJets == 3) + 0.6*(numJets >= 4) )']
    zz_lowmll:
        #weights: ['common', '( 1.0+ 0.4*(numJets == 3) + 0.6*(numJets >= 4) )']
    zz_lf_llll:
        #weights: ['common', '( 1.0+ 0.4*(numJets == 3) + 0.6*(numJets >= 4) )']
    zz_cc_llll:
        #weights: ['common', '( 1.0+ 0.4*(numJets == 3) + 0.6*(numJets >= 4) )']
    zz_b_llll:
        #weights: ['common', '( 1.0+ 0.4*(numJets == 3) + 0.6*(numJets >= 4) )']
    zz_bb_llll:
        #weights: ['common', '( 1.0+ 0.4*(numJets == 3) + 0.6*(numJets >= 4) )']
    www:
        #weights: ['common', '( 1.0+ 0.4*(numJets == 3) + 0.6*(numJets >= 4) )']
    wwz:
#     zjets_0p:
#         tree sample: zjets
#         additional cuts: ['numExtraPartons == 0']
#     zjets_1p:
#     zjets_2p:
#     zjets_3p:
#     zjets_4p:
#     #ttbar_lj:
#     ttbar_ll:
    ttbarW:
    ttbarWW:
    ttbarZ:
    ttbarG:
    ttbarGStar_ee:
    ttbarGStar_mm:
    ttbarGStar_tt:
    tbZ_ll:
    inclusive_data:
        weights: none
        systematics: nominal
    DoubleMu:
        weights: none
        systematics: nominal
    DoubleElectron:
        weights: none
        systematics: nominal
    inclusive_data_NP_sideband:
        tree sample: inclusive_data
        additional cuts: ['(all_SS_leptons_by_pt_1_lepCut < 2 || all_SS_leptons_by_pt_2_lepCut < 2)']
        cuts to remove: ['all_SS_leptons_by_pt_1_lepCut == 2 && all_SS_leptons_by_pt_2_lepCut == 2']
        weights: DataDrivenFRLepCut_NP_2_tight_SS
        systematics: [NP_FR_lepCut_3l_2t_mu_rateUp, NP_FR_lepCut_3l_2t_mu_rateDown, NP_FR_lepCut_3l_2t_ele_rateUp, NP_FR_lepCut_3l_2t_ele_rateDown, NP_FR_lepCut_3l_2t_mu_pt_20_30_rateUp, NP_FR_lepCut_3l_2t_mu_pt_20_30_rateDown, NP_FR_lepCut_3l_2t_mu_pt_30_inf_rateUp, NP_FR_lepCut_3l_2t_mu_pt_30_inf_rateDown, NP_FR_lepCut_3l_2t_ele_pt_20_40_rateUp, NP_FR_lepCut_3l_2t_ele_pt_20_40_rateDown, NP_FR_lepCut_3l_2t_ele_pt_40_inf_rateUp, NP_FR_lepCut_3l_2t_ele_pt_40_inf_rateDown]
    DoubleMu_NP_sideband:
        tree sample: DoubleMu
        additional cuts: ['(all_SS_leptons_by_pt_1_lepCut < 2 || all_SS_leptons_by_pt_2_lepCut < 2)']
        cuts to remove: ['all_SS_leptons_by_pt_1_lepCut == 2 && all_SS_leptons_by_pt_2_lepCut == 2']
        weights: DataDrivenFRLepCut_NP_2_tight_SS
        systematics: [NP_FR_lepCut_3l_2t_mu_rateUp, NP_FR_lepCut_3l_2t_mu_rateDown, NP_FR_lepCut_3l_2t_ele_rateUp, NP_FR_lepCut_3l_2t_ele_rateDown, NP_FR_lepCut_3l_2t_mu_pt_20_30_rateUp, NP_FR_lepCut_3l_2t_mu_pt_20_30_rateDown, NP_FR_lepCut_3l_2t_mu_pt_30_inf_rateUp, NP_FR_lepCut_3l_2t_mu_pt_30_inf_rateDown, NP_FR_lepCut_3l_2t_ele_pt_20_40_rateUp, NP_FR_lepCut_3l_2t_ele_pt_20_40_rateDown, NP_FR_lepCut_3l_2t_ele_pt_40_inf_rateUp, NP_FR_lepCut_3l_2t_ele_pt_40_inf_rateDown]
    DoubleElectron_NP_sideband:
        tree sample: DoubleElectron
        additional cuts: ['(all_SS_leptons_by_pt_1_lepCut < 2 || all_SS_leptons_by_pt_2_lepCut < 2)']
        cuts to remove: ['all_SS_leptons_by_pt_1_lepCut == 2 && all_SS_leptons_by_pt_2_lepCut == 2']
        weights: DataDrivenFRLepCut_NP_2_tight_SS
        systematics: [NP_FR_lepCut_3l_2t_mu_rateUp, NP_FR_lepCut_3l_2t_mu_rateDown, NP_FR_lepCut_3l_2t_ele_rateUp, NP_FR_lepCut_3l_2t_ele_rateDown, NP_FR_lepCut_3l_2t_mu_pt_20_30_rateUp, NP_FR_lepCut_3l_2t_mu_pt_20_30_rateDown, NP_FR_lepCut_3l_2t_mu_pt_30_inf_rateUp, NP_FR_lepCut_3l_2t_mu_pt_30_inf_rateDown, NP_FR_lepCut_3l_2t_ele_pt_20_40_rateUp, NP_FR_lepCut_3l_2t_ele_pt_20_40_rateDown, NP_FR_lepCut_3l_2t_ele_pt_40_inf_rateUp, NP_FR_lepCut_3l_2t_ele_pt_40_inf_rateDown]
#     inclusive_data_NP_sideband_HF_NP_lep:
#         tree sample: inclusive_data
#         additional cuts: ['(all_SS_leptons_by_pt_1_lepCut < 0 || all_SS_leptons_by_pt_2_lepCut < 0)', 'all_OS_leptons_by_pt_1_lepCut > -1']
#         cuts to remove: ['all_SS_leptons_by_pt_1_lepCut == 2 && all_SS_leptons_by_pt_2_lepCut == 2', 'all_SS_leptons_by_pt_1_lepCut > -1 && all_SS_leptons_by_pt_2_lepCut > -1 && all_OS_leptons_by_pt_1_lepCut > -1']
#         weights: none
#         systematics: [noNominal, HF_NP_lep]
#     inclusive_data_NP_sideband_pos:
#         tree sample: inclusive_data
#         additional cuts: ['(all_SS_leptons_by_pt_1_lepCut == 2) + (all_SS_leptons_by_pt_2_lepCut == 2) == 1']
#         cuts to remove: ['all_SS_leptons_by_pt_1_lepCut == 2 && all_SS_leptons_by_pt_2_lepCut == 2']
#         weights: DataDrivenFRLepCut_NP_2_tight_SS
#         systematics: [NP_FR_lepCut_3l_2t_mu_rateUp, NP_FR_lepCut_3l_2t_mu_rateDown, NP_FR_lepCut_3l_2t_ele_rateUp, NP_FR_lepCut_3l_2t_ele_rateDown, NP_FR_lepCut_3l_2t_mu_pt_20_30_rateUp, NP_FR_lepCut_3l_2t_mu_pt_20_30_rateDown, NP_FR_lepCut_3l_2t_mu_pt_30_inf_rateUp, NP_FR_lepCut_3l_2t_mu_pt_30_inf_rateDown, NP_FR_lepCut_3l_2t_ele_pt_20_40_rateUp, NP_FR_lepCut_3l_2t_ele_pt_20_40_rateDown, NP_FR_lepCut_3l_2t_ele_pt_40_inf_rateUp, NP_FR_lepCut_3l_2t_ele_pt_40_inf_rateDown]
#     inclusive_data_NP_sideband_neg:
#         tree sample: inclusive_data
#         additional cuts: ['(all_SS_leptons_by_pt_1_lepCut == 2) + (all_SS_leptons_by_pt_2_lepCut == 2) == 0']
#         cuts to remove: ['all_SS_leptons_by_pt_1_lepCut == 2 && all_SS_leptons_by_pt_2_lepCut == 2']
#         weights: DataDrivenFRLepCut_NP_2_tight_SS
#         systematics: [NP_FR_lepCut_3l_2t_mu_rateUp, NP_FR_lepCut_3l_2t_mu_rateDown, NP_FR_lepCut_3l_2t_ele_rateUp, NP_FR_lepCut_3l_2t_ele_rateDown, NP_FR_lepCut_3l_2t_mu_pt_20_30_rateUp, NP_FR_lepCut_3l_2t_mu_pt_20_30_rateDown, NP_FR_lepCut_3l_2t_mu_pt_30_inf_rateUp, NP_FR_lepCut_3l_2t_mu_pt_30_inf_rateDown, NP_FR_lepCut_3l_2t_ele_pt_20_40_rateUp, NP_FR_lepCut_3l_2t_ele_pt_20_40_rateDown, NP_FR_lepCut_3l_2t_ele_pt_40_inf_rateUp, NP_FR_lepCut_3l_2t_ele_pt_40_inf_rateDown]
#     inclusive_data_NP_sideband_pos_unscaled:
#         tree sample: inclusive_data
#         additional cuts: ['(all_SS_leptons_by_pt_1_lepCut == 2) + (all_SS_leptons_by_pt_2_lepCut == 2) == 1']
#         cuts to remove: ['all_SS_leptons_by_pt_1_lepCut == 2 && all_SS_leptons_by_pt_2_lepCut == 2']
#         weights: none
#         systematics: [NP_FR_lepCut_3l_2t_mu_rateUp, NP_FR_lepCut_3l_2t_mu_rateDown, NP_FR_lepCut_3l_2t_ele_rateUp, NP_FR_lepCut_3l_2t_ele_rateDown, NP_FR_lepCut_3l_2t_mu_pt_20_30_rateUp, NP_FR_lepCut_3l_2t_mu_pt_20_30_rateDown, NP_FR_lepCut_3l_2t_mu_pt_30_inf_rateUp, NP_FR_lepCut_3l_2t_mu_pt_30_inf_rateDown, NP_FR_lepCut_3l_2t_ele_pt_20_40_rateUp, NP_FR_lepCut_3l_2t_ele_pt_20_40_rateDown, NP_FR_lepCut_3l_2t_ele_pt_40_inf_rateUp, NP_FR_lepCut_3l_2t_ele_pt_40_inf_rateDown]
#     ttbarZ_NP_sideband:
#         tree sample: ttbarZ
#         additional cuts: ['(all_SS_leptons_by_pt_1_lepCut == 2) + (all_SS_leptons_by_pt_2_lepCut == 2) == 1']
#         cuts to remove: ['all_SS_leptons_by_pt_1_lepCut == 2 && all_SS_leptons_by_pt_2_lepCut == 2']
#         weights: ['common', 'DataDrivenFRLepCut_NP_2_tight_SS']
#         systematics: none
#     wz_lll_NP_sideband:
#         tree sample: wz_lll
#         additional cuts: ['(all_SS_leptons_by_pt_1_lepCut == 2) + (all_SS_leptons_by_pt_2_lepCut == 2) == 1']
#         cuts to remove: ['all_SS_leptons_by_pt_1_lepCut == 2 && all_SS_leptons_by_pt_2_lepCut == 2']
#         weights: ['common', 'DataDrivenFRLepCut_NP_2_tight_SS']
#         systematics: none
#     zjets_0p_NP_sideband:
#         tree sample: zjets
#         additional cuts: ['numExtraPartons == 0']
#         additional cuts: ['(all_SS_leptons_by_pt_1_lepCut == 2) + (all_SS_leptons_by_pt_2_lepCut == 2) == 1']
#         cuts to remove: ['all_SS_leptons_by_pt_1_lepCut == 2 && all_SS_leptons_by_pt_2_lepCut == 2']
#         weights: ['common', 'DataDrivenFRLepCut_NP_2_tight_SS']
#         systematics: none
#     zjets_1p_NP_sideband:
#         tree sample: zjets_1p
#         additional cuts: ['(all_SS_leptons_by_pt_1_lepCut == 2) + (all_SS_leptons_by_pt_2_lepCut == 2) == 1']
#         cuts to remove: ['all_SS_leptons_by_pt_1_lepCut == 2 && all_SS_leptons_by_pt_2_lepCut == 2']
#         weights: ['common', 'DataDrivenFRLepCut_NP_2_tight_SS']
#         systematics: none
#     zjets_2p_NP_sideband:
#         tree sample: zjets_2p
#         additional cuts: ['(all_SS_leptons_by_pt_1_lepCut == 2) + (all_SS_leptons_by_pt_2_lepCut == 2) == 1']
#         cuts to remove: ['all_SS_leptons_by_pt_1_lepCut == 2 && all_SS_leptons_by_pt_2_lepCut == 2']
#         weights: ['common', 'DataDrivenFRLepCut_NP_2_tight_SS']
#         systematics: none
#     zjets_3p_NP_sideband:
#         tree sample: zjets_3p
#         additional cuts: ['(all_SS_leptons_by_pt_1_lepCut == 2) + (all_SS_leptons_by_pt_2_lepCut == 2) == 1']
#         cuts to remove: ['all_SS_leptons_by_pt_1_lepCut == 2 && all_SS_leptons_by_pt_2_lepCut == 2']
#         weights: ['common', 'DataDrivenFRLepCut_NP_2_tight_SS']
#         systematics: none
#     zjets_4p_NP_sideband:
#         tree sample: zjets_4p
#         additional cuts: ['(all_SS_leptons_by_pt_1_lepCut == 2) + (all_SS_leptons_by_pt_2_lepCut == 2) == 1']
#         cuts to remove: ['all_SS_leptons_by_pt_1_lepCut == 2 && all_SS_leptons_by_pt_2_lepCut == 2']
#         weights: ['common', 'DataDrivenFRLepCut_NP_2_tight_SS']
#         systematics: none
#     ttbar_ll_NP_sideband:
#         tree sample: ttbar_ll
#         additional cuts: ['(all_SS_leptons_by_pt_1_lepCut == 2) + (all_SS_leptons_by_pt_2_lepCut == 2) == 1']
#         cuts to remove: ['all_SS_leptons_by_pt_1_lepCut == 2 && all_SS_leptons_by_pt_2_lepCut == 2']
#         weights: ['common', 'DataDrivenFRLepCut_NP_2_tight_SS']
#         systematics: none


aliases:
    - &default_num_bins 10

distributions:
    numAllLeptons:
        expression: numAllLeptons
        axis labels: ['number of leptons', Events]
        binning: [2, 2.5, 4.5]

    numAllMuons:
        expression: numAllMuons
        axis labels: ['number of muons', Events]
        binning: [4, -0.5, 3.5]

    numJets:
        expression: numJets
        axis labels: ['number of jets', Events]
        binning: [8, -0.5, 7.5]

    numLooseBJets:
        expression: numLooseBJets
        axis labels: ['number of loose b-tagged jets', Events]
        binning: [5, -0.5, 4.5]

    numMediumBJets:
        expression: numMediumBJets
        axis labels: ['number of medium b-tagged jets', Events]
        binning: [4, -0.5, 3.5]

    numTightBJets:
        expression: numTightBJets
        axis labels: ['number of tight b-tagged jets', Events]
        binning: [4, -0.5, 3.5]

#     all_Z_leptons_by_pt_1_pt:
#         expression: all_Z_leptons_by_pt_1_pt
#         axis labels: ['First Z lepton pT', Events]
#         binning: [*default_num_bins, 0, 300]

#     all_Z_leptons_by_pt_2_pt:
#         expression: all_Z_leptons_by_pt_2_pt
#         axis labels: ['Second Z lepton pT', Events]
#         binning: [*default_num_bins, 0, 100]

    all_nonZ_leptons_by_pt_1_pt:
        expression: all_nonZ_leptons_by_pt_1_pt
        axis labels: ['Non-Z lepton pT', Events]
        binning: [*default_num_bins, 0, 200]

    all_SS_leptons_by_pt_1_pt:
        expression: all_SS_leptons_by_pt_1_pt
        axis labels: ['First SS lepton pT', Events]
        binning: [*default_num_bins, 0, 300]

    all_SS_leptons_by_pt_2_pt:
        expression: all_SS_leptons_by_pt_2_pt
        axis labels: ['Second SS lepton pT', Events]
        binning: [*default_num_bins, 0, 100]

    all_OS_leptons_by_pt_1_pt:
        expression: all_OS_leptons_by_pt_1_pt
        axis labels: ['Non-Z lepton pT', Events]
        binning: [*default_num_bins, 0, 200]

    all_nonZ_leptons_by_pt_1_eta:
        expression: abs(all_nonZ_leptons_by_pt_1_eta)
        axis labels: ['Non-Z lepton eta', Events]
        binning: [*default_num_bins, 0, 2.5]

#     all_nonZ_leptons_by_pt_1_jetBTagCSV:
#         expression: abs(all_nonZ_leptons_by_pt_1_jetBTagCSV)
#         axis labels: ['Non-Z lepton jetBTagCSV', Events]
#         binning: [11, -0.1, 1]

    all_nonZ_leptons_by_pt_1_isMuon:
        expression: all_nonZ_leptons_by_pt_1_isMuon
        axis labels: ['Non-Z lepton isMuon', Events]
        binning: [2, -0.5, 1.5]

    all_SS_leptons_by_pt_2_eta:
        expression: abs(all_SS_leptons_by_pt_2_eta)
        axis labels: ['Non-Z lepton eta', Events]
        binning: [*default_num_bins, 0, 2.5]

#     all_SS_leptons_by_pt_2_jetBTagCSV:
#         expression: abs(all_SS_leptons_by_pt_2_jetBTagCSV)
#         axis labels: ['Non-Z lepton jetBTagCSV', Events]
#         binning: [11, -0.1, 1]

    jets_by_pt_1_pt:
        expression: jets_by_pt_1_pt
        axis labels: ['First jet pT', Events]
        binning: [*default_num_bins, 20, 300]

    jets_by_pt_2_pt:
        expression: jets_by_pt_2_pt
        axis labels: ['Second jet pT', Events]
        binning: [*default_num_bins, 20, 250]

    min_mass_leplep_all:
        expression: min_mass_leplep_all
        axis labels: ['min dilepton mass', Events]
        binning: [*default_num_bins, 10, 110]

    ZLike_mass_leplep_SFOS_all:
        expression: ZLike_mass_leplep_SFOS_all
        axis labels: ['Z mass', Events]
        binning: [*default_num_bins, 76.0, 106.0]

    ZLike_pt_leplep_SFOS_all:
        expression: ZLike_pt_leplep_SFOS_all
        axis labels: ['Z pt', Events]
        binning: [*default_num_bins, 0, 300]

    ZLike_eta_leplep_SFOS_all:
        expression: ZLike_eta_leplep_SFOS_all
        axis labels: ['Z eta', Events]
        binning: [*default_num_bins, -5, 5]

    met_pt:
        expression: met_pt
        axis labels: ['MET', Events]
        binning: [*default_num_bins, 0, 200]

    mht:
        expression: mht
        axis labels: ['MHT', Events]
        binning: [*default_num_bins, 0, 200]

    met_ld:
        expression: met_pt*0.6 + mht*0.4
        axis labels: ['MetLD', Events]
        binning: [*default_num_bins, 0, 200]

    sum_pt:
        expression: sum_pt
        axis labels: ['Sum pT', Events]
        binning: [*default_num_bins, 0, 1200]

#     sum_jet_pt:
#         expression: sum_jet_pt
#         axis labels: ['Sum jet pT', Events]
#         binning: [*default_num_bins, 0, 1000]

#     mass_of_jets:
#         expression: mass_of_jets
#         axis labels: ['Mass of all jets', Events]
#         binning: [*default_num_bins, 0, 1000]

#     jets_MT_mass_ratio:
#         expression: MT_of_jets / mass_of_jets
#         axis labels: ['MT/mass of all jets', Events]
#         binning: [*default_num_bins, 0, 1]

#     everything_MT_mass_ratio:
#         expression: MT_of_everything / mass_of_everything
#         axis labels: ['MT/mass of all jets', Events]
#         binning: [*default_num_bins, 0, 1]

    WLike_MT_met_lep:
        expression: WLike_MT_met_lep
        axis labels: ['MT(met, lep)', Events]
        binning: [*default_num_bins, 0, 200]

#     WLike_deltaPhi_met_lep:
#         expression: cos(WLike_deltaPhi_met_lep)
#         axis labels: ['deltaPhi(met, lep)', Events]
#         binning: [*default_num_bins, -1, 1]

#     min_mass_Z_nonZ_lep:
#         expression: min_mass_Z_nonZ_lep
#         axis labels: ['min Z non-Z mass', Events]
#         binning: [*default_num_bins, 10, 210]

#     min_deltaR_Z_nonZ_lep:
#         expression: min_deltaR_Z_nonZ_lep
#         axis labels: ['min Z non-Z deltaR', Events]
#         binning: [*default_num_bins, 0, 4]

#     met_minus_all_nonZ_leptons_by_pt_1_pt:
#         expression: met_pt - all_nonZ_leptons_by_pt_1_pt
#         axis labels: ['Non-Z lepton pT', Events]
#         binning: [*default_num_bins, -80, 120]

#     Match_ttZ_3l_Bb:
#         expression: Match_ttZ_3l_Bb
#         axis labels: ['match score Bb', Events]
#         binning: [*default_num_bins, -4, 2]

#     Match_ttZ_3l_Bq:
#         expression: Match_ttZ_3l_Bq
#         axis labels: ['match score Bq', Events]
#         binning: [*default_num_bins, -2, 1]

#     Match_ttZ_3l_bq:
#         expression: Match_ttZ_3l_bq
#         axis labels: ['match score bq', Events]
#         binning: [*default_num_bins, -5, 2]

    Match_ttZ_3l_Bbq:
        expression: Match_ttZ_3l_Bbq
        axis labels: ['match score Bbq', Events]
        binning: [*default_num_bins, -4, 2]

    Match_ttZ_3l_Bqq:
        expression: Match_ttZ_3l_Bqq
        axis labels: ['match score Bqq', Events]
        binning: [*default_num_bins, -3, 2]

    Match_ttZ_3l_bqq:
        expression: Match_ttZ_3l_bqq
        axis labels: ['match score bqq', Events]
        binning: [*default_num_bins, -5, 3]

    Match_ttZ_3l_Bbqq:
        expression: Match_ttZ_3l_Bbqq
        axis labels: ['match score Bbqq', Events]
        binning: [*default_num_bins, -5, 2]

#     ttZ_3l_B_CSV:
#         expression: ttZ_3l_B_CSV
#         axis labels: ['matched B CSV', Events]
#         binning: [11, -0.1, 1]

#     ttZ_3l_b_CSV:
#         expression: ttZ_3l_b_CSV
#         axis labels: ['matched b CSV', Events]
#         binning: [11, -0.1, 1]

#     ttZ_3l_q_1_CSV:
#         expression: ttZ_3l_q_1_CSV
#         axis labels: ['matched first q CSV', Events]
#         binning: [*default_num_bins, -0.1, 1]

#     ttZ_3l_q_2_CSV:
#         expression: ttZ_3l_q_2_CSV
#         axis labels: ['matched second q CSV', Events]
#         binning: [11, -0.1, 1]

#     ttZ_3l_B_charge:
#         expression: ttZ_3l_B_charge
#         axis labels: ['matched B charge', Events]
#         binning: [*default_num_bins, -0.8, 0.8]

#     ttZ_3l_b_charge:
#         expression: ttZ_3l_b_charge
#         axis labels: ['matched b charge', Events]
#         binning: [*default_num_bins, -0.8, 0.8]

#     ttZ_3l_W_mass_qq:
#         expression: ttZ_3l_W_mass_qq
#         axis labels: ['matched W mass qq', Events]
#         binning: [*default_num_bins, 0, 150]

#     ttZ_3l_top_mass_lep_B:
#         expression: ttZ_3l_top_mass_lep_B
#         axis labels: ['matched top mass lep B', Events]
#         binning: [*default_num_bins, 0, 250]

#     ttZ_3l_top_mass_b_q:
#         expression: ttZ_3l_top_mass_b_q
#         axis labels: ['matched top mass bq', Events]
#         binning: [*default_num_bins, 40, 190]

#     ttZ_3l_top_mass_b_qq:
#         expression: ttZ_3l_top_mass_b_qq
#         axis labels: ['matched top mass bqq', Events]
#         binning: [*default_num_bins, 70, 270]

    FinalBDT:
        expression: FinalBDT_ttZ_3l
        axis labels: ['final BDT', Events]
        binning: [4, [-1, -0.6, -0.2, 0.3, 1]]

    FinalBDT_Oct31:
        expression: FinalBDT_ttZ_3l_Oct31
        axis labels: ['final BDT Oct 31', Events]
        binning: [4, [-1, -0.7, -0.4, 0, 1]]

    FinalBDT_blind:
        expression: FinalBDT_ttZ_3l
        axis labels: ['final BDT', Events]
        binning: [2, [-1, -0.6, -0.2]]

    FinalBDT_Oct31_blind:
        expression: FinalBDT_ttZ_3l_Oct31
        axis labels: ['final BDT Oct 31', Events]
        binning: [2, [-1, -0.7, -0.4]]

# #     WLike_dijet_mass_X1b:
# #         expression: WLike_dijet_mass_X1b
# #         axis labels: ['W mass (exclude one b-jet)', Events]
# #         binning: [*default_num_bins, 0, 200]

# #     WLike_dijet_mass_X2b:
# #         expression: WLike_dijet_mass_X2b
# #         axis labels: ['W mass (exclude two b-jets)', Events]
# #         binning: [*default_num_bins, 0, 200]

# #     topLike_MT_met_lep_b_175:
# #         expression: topLike_MT_met_lep_b_175
# #         axis labels: ['top MT(met, lep, b)', Events]
# #         binning: [*default_num_bins, 0, 400]

# #     topLike_mass_lep_b_100:
# #         expression: topLike_mass_lep_b_100
# #         axis labels: ['top mass(lep, b)', Events]
# #         binning: [*default_num_bins, 0, 300]

# #     topLike_multijet_mass_b1:
# #         expression: topLike_multijet_mass_b1
# #         axis labels: ['top mass(jets, b1)', Events]
# #         binning: [*default_num_bins, 0, 1000]

# #     topLike_multijet_mass_b2:
# #         expression: topLike_multijet_mass_b2
# #         axis labels: ['top mass(jets, b2)', Events]
# #         binning: [*default_num_bins, 0, 1000]

# #     topPairLike_MT_met_lep_jets:
# #         expression: topPairLike_MT_met_lep_jets
# #         axis labels: ['top pair MT(met, lep, jets)', Events]
# #         binning: [*default_num_bins, 0, 1000]

# #     topPairLike_mass_lep_jets:
# #         expression: topPairLike_mass_lep_jets
# #         axis labels: ['top pair mass(lep, jets)', Events]
# #         binning: [*default_num_bins, 0, 1200]


# ### ----- Muon properties --------

#     min_mass_Z_nonZ_lep:
#         expression: min_mass_Z_nonZ_lep
#         axis labels: ['min Z non-Z mass', Events]
#         binning: [*default_num_bins, 10, 210]

#     min_deltaR_Z_nonZ_lep:
#         expression: min_deltaR_Z_nonZ_lep
#         axis labels: ['min Z non-Z deltaR', Events]
#         binning: [*default_num_bins, 0, 4]

#     WLike_MT_met_lep:
#         expression: WLike_MT_met_lep
#         axis labels: ['MT(met, lep)', Events]
#         binning: [*default_num_bins, 0, 200]

#     WLike_deltaPhi_met_lep:
#         expression: cos(WLike_deltaPhi_met_lep)
#         axis labels: ['deltaPhi(met, lep)', Events]
#         binning: [*default_num_bins, -1, 1]

#     met_minus_all_nonZ_leptons_by_pt_1_pt:
#         expression: met_pt - all_nonZ_leptons_by_pt_1_pt
#         axis labels: ['Non-Z lepton pT', Events]
#         binning: [*default_num_bins, -80, 120]

#     all_nonZ_leptons_by_pt_1_pt:
#         expression: all_nonZ_leptons_by_pt_1_pt
#         axis labels: ['Non-Z lepton pT', Events]
#         binning: [*default_num_bins, 10, 110]

#     all_nonZ_leptons_by_pt_1_eta:
#         expression: abs(all_nonZ_leptons_by_pt_1_eta)
#         axis labels: ['Non-Z lepton eta', Events]
#         binning: [*default_num_bins, 0, 2.5]

#     all_nonZ_leptons_by_pt_1_DBCorrectedRelIsoDR04:
#         expression: abs(all_nonZ_leptons_by_pt_1_DBCorrectedRelIsoDR04)
#         axis labels: ['Non-Z lepton DBCorrectedRelIsoDR04', Events]
#         binning: [*default_num_bins, 0, 0.2]

#     all_nonZ_leptons_by_pt_1_pt_minus_samPT:
#         expression: all_nonZ_leptons_by_pt_1_pt - all_nonZ_leptons_by_pt_1_samPT
#         axis labels: ['Non-Z lepton pT - samPT', Events]
#         binning: [*default_num_bins, -25, 25]

#     all_nonZ_leptons_by_pt_1_eta_minus_samEta:
#         expression: abs(all_nonZ_leptons_by_pt_1_eta - all_nonZ_leptons_by_pt_1_samEta)
#         axis labels: ['Non-Z lepton eta - samEta', Events]
#         binning: [*default_num_bins, 0, 0.1]

#     all_nonZ_leptons_by_pt_1_phi_minus_samPhi:
#         expression: abs(all_nonZ_leptons_by_pt_1_phi - all_nonZ_leptons_by_pt_1_samPhi)
#         axis labels: ['Non-Z lepton phi - samPhi', Events]
#         binning: [*default_num_bins, 0, 0.1]

#     all_nonZ_leptons_by_pt_1_jetBTagCSV:
#         expression: abs(all_nonZ_leptons_by_pt_1_jetBTagCSV)
#         axis labels: ['Non-Z lepton jetBTagCSV', Events]
#         binning: [11, -0.1, 1]

#     all_nonZ_leptons_by_pt_1_jetPtRatio:
#         expression: all_nonZ_leptons_by_pt_1_jetPtRatio
#         axis labels: ['Non-Z lepton jetPtRatio', Events]
#         binning: [*default_num_bins, 0.4, 1.2]

#     all_nonZ_leptons_by_pt_1_jetDeltaR:
#         expression: all_nonZ_leptons_by_pt_1_jetDeltaR
#         axis labels: ['Non-Z lepton jetDeltaR', Events]
#         binning: [*default_num_bins, 0, 0.15]

#     all_nonZ_leptons_by_pt_1_SIP:
#         expression: log(abs(all_nonZ_leptons_by_pt_1_SIP))
#         axis labels: ['Non-Z lepton SIP', Events]
#         binning: [*default_num_bins, -2.5, 2.5]

#     all_nonZ_leptons_by_pt_1_correctedD0Vertex:
#         expression: log(abs(all_nonZ_leptons_by_pt_1_correctedD0Vertex))
#         axis labels: ['Non-Z lepton correctedD0Vertex', Events]
#         binning: [*default_num_bins, -10, 4]

#     all_nonZ_leptons_by_pt_1_correctedDZ:
#         expression: log(abs(all_nonZ_leptons_by_pt_1_correctedDZ))
#         axis labels: ['Non-Z lepton correctedDZ', Events]
#         binning: [*default_num_bins, -10, 4]

#     all_nonZ_leptons_by_pt_1_IP:
#         expression: log(abs(all_nonZ_leptons_by_pt_1_IP))
#         axis labels: ['Non-Z lepton IP', Events]
#         binning: [*default_num_bins, -10, 4]

#     all_nonZ_leptons_by_pt_1_IPError:
#         expression: all_nonZ_leptons_by_pt_1_IPError
#         axis labels: ['Non-Z lepton IPError', Events]
#         binning: [*default_num_bins, 0, 0.01]

#     all_nonZ_leptons_by_pt_1_normalizedChi2:
#         expression: log(all_nonZ_leptons_by_pt_1_normalizedChi2)
#         axis labels: ['Non-Z lepton normalizedChi2', Events]
#         binning: [*default_num_bins, -2.5, 1.5]

#     all_nonZ_leptons_by_pt_1_innerTrackNormChi2:
#         expression: log(all_nonZ_leptons_by_pt_1_innerTrackNormChi2)
#         axis labels: ['Non-Z lepton innerTrackNormChi2', Events]
#         binning: [*default_num_bins, -2.5, 1.5]

#     all_nonZ_leptons_by_pt_1_tkNormChi2:
#         expression: log(all_nonZ_leptons_by_pt_1_tkNormChi2)
#         axis labels: ['Non-Z lepton tkNormChi2', Events]
#         binning: [*default_num_bins, -2.5, 1.5]

#     all_nonZ_leptons_by_pt_1_numberOfValidTrackerHitsInnerTrack:
#         expression: all_nonZ_leptons_by_pt_1_numberOfValidTrackerHitsInnerTrack
#         axis labels: ['Non-Z lepton numberOfValidTrackerHitsInnerTrack', Events]
#         binning: [*default_num_bins, 0, 30]

#     all_nonZ_leptons_by_pt_1_numberOfValidTrackerHits:
#         expression: all_nonZ_leptons_by_pt_1_numberOfValidTrackerHits
#         axis labels: ['Non-Z lepton numberOfValidTrackerHits', Events]
#         binning: [*default_num_bins, 0, 30]

#     all_nonZ_leptons_by_pt_1_numberOfValidMuonHits:
#         expression: all_nonZ_leptons_by_pt_1_numberOfValidMuonHits
#         axis labels: ['Non-Z lepton numberOfValidMuonHits', Events]
#         binning: [*default_num_bins, 0, 50]

#     all_nonZ_leptons_by_pt_1_numberOfValidPixelHits:
#         expression: all_nonZ_leptons_by_pt_1_numberOfValidPixelHits
#         axis labels: ['Non-Z lepton numberOfValidPixelHits', Events]
#         binning: [*default_num_bins, 0, 10]

#     all_nonZ_leptons_by_pt_1_numberOfMatchedStations:
#         expression: all_nonZ_leptons_by_pt_1_numberOfMatchedStations
#         axis labels: ['Non-Z lepton numberOfMatchedStations', Events]
#         binning: [*default_num_bins, 0, 10]

#     all_nonZ_leptons_by_pt_1_numberOfMatches:
#         expression: all_nonZ_leptons_by_pt_1_numberOfMatches
#         axis labels: ['Non-Z lepton numberOfMatches', Events]
#         binning: [*default_num_bins, 0, 10]

# #     all_nonZ_leptons_by_pt_1_isTrackerMuon:
# #         expression: all_nonZ_leptons_by_pt_1_isTrackerMuon
# #         axis labels: ['Non-Z lepton isTrackerMuon', Events]
# #         binning: [2, -0.5, 1.5]

#     all_nonZ_leptons_by_pt_1_isGlobalMuonPromptTight:
#         expression: all_nonZ_leptons_by_pt_1_isGlobalMuonPromptTight
#         axis labels: ['Non-Z lepton isGlobalMuonPromptTight', Events]
#         binning: [2, -0.5, 1.5]

#     all_nonZ_leptons_by_pt_1_isGoodMuon_1StationTight:
#         expression: all_nonZ_leptons_by_pt_1_isGoodMuon_1StationTight
#         axis labels: ['Non-Z lepton isGoodMuon_1StationTight', Events]
#         binning: [2, -0.5, 1.5]

#     all_nonZ_leptons_by_pt_1_lepMVA:
#         expression: abs(all_nonZ_leptons_by_pt_1_lepMVA)
#         axis labels: ['Non-Z lepton lepMVA', Events]
#         binning: [*default_num_bins, 0.7, 1]

#     all_nonZ_leptons_by_pt_1_isMuon:
#         expression: all_nonZ_leptons_by_pt_1_isMuon
#         axis labels: ['Non-Z lepton isMuon', Events]
#         binning: [2, -0.5, 1.5]

# ##----------------
        
#     all_Z_leptons_by_pt_1_pt:
#         expression: all_Z_leptons_by_pt_1_pt
#         axis labels: ['Z lepton pT', Events]
#         binning: [*default_num_bins, 10, 110]

#     all_Z_leptons_by_pt_1_eta:
#         expression: abs(all_Z_leptons_by_pt_1_eta)
#         axis labels: ['Z lepton eta', Events]
#         binning: [*default_num_bins, 0, 2.5]

#     all_Z_leptons_by_pt_1_DBCorrectedRelIsoDR04:
#         expression: abs(all_Z_leptons_by_pt_1_DBCorrectedRelIsoDR04)
#         axis labels: ['Z lepton DBCorrectedRelIsoDR04', Events]
#         binning: [*default_num_bins, 0, 0.2]

#     all_Z_leptons_by_pt_1_pt_minus_samPT:
#         expression: all_Z_leptons_by_pt_1_pt - all_Z_leptons_by_pt_1_samPT
#         axis labels: ['Z lepton pT - samPT', Events]
#         binning: [*default_num_bins, -25, 25]

#     all_Z_leptons_by_pt_1_eta_minus_samEta:
#         expression: abs(all_Z_leptons_by_pt_1_eta - all_Z_leptons_by_pt_1_samEta)
#         axis labels: ['Z lepton eta - samEta', Events]
#         binning: [*default_num_bins, 0, 0.1]

#     all_Z_leptons_by_pt_1_phi_minus_samPhi:
#         expression: abs(all_Z_leptons_by_pt_1_phi - all_Z_leptons_by_pt_1_samPhi)
#         axis labels: ['Z lepton phi - samPhi', Events]
#         binning: [*default_num_bins, 0, 0.1]

#     all_Z_leptons_by_pt_1_jetBTagCSV:
#         expression: abs(all_Z_leptons_by_pt_1_jetBTagCSV)
#         axis labels: ['Z lepton jetBTagCSV', Events]
#         binning: [11, -0.1, 1]

#     all_Z_leptons_by_pt_1_jetPtRatio:
#         expression: all_Z_leptons_by_pt_1_jetPtRatio
#         axis labels: ['Z lepton jetPtRatio', Events]
#         binning: [*default_num_bins, 0.4, 1.2]

#     all_Z_leptons_by_pt_1_jetDeltaR:
#         expression: all_Z_leptons_by_pt_1_jetDeltaR
#         axis labels: ['Z lepton jetDeltaR', Events]
#         binning: [*default_num_bins, 0, 0.15]

#     all_Z_leptons_by_pt_1_SIP:
#         expression: log(abs(all_Z_leptons_by_pt_1_SIP))
#         axis labels: ['Z lepton SIP', Events]
#         binning: [*default_num_bins, -2.5, 2.5]

#     all_Z_leptons_by_pt_1_correctedD0Vertex:
#         expression: log(abs(all_Z_leptons_by_pt_1_correctedD0Vertex))
#         axis labels: ['Z lepton correctedD0Vertex', Events]
#         binning: [*default_num_bins, -10, 4]

#     all_Z_leptons_by_pt_1_correctedDZ:
#         expression: log(abs(all_Z_leptons_by_pt_1_correctedDZ))
#         axis labels: ['Z lepton correctedDZ', Events]
#         binning: [*default_num_bins, -10, 4]

#     all_Z_leptons_by_pt_1_IP:
#         expression: log(abs(all_Z_leptons_by_pt_1_IP))
#         axis labels: ['Z lepton IP', Events]
#         binning: [*default_num_bins, -10, 4]

#     all_Z_leptons_by_pt_1_IPError:
#         expression: all_Z_leptons_by_pt_1_IPError
#         axis labels: ['Z lepton IPError', Events]
#         binning: [*default_num_bins, 0, 0.01]

#     all_Z_leptons_by_pt_1_normalizedChi2:
#         expression: log(all_Z_leptons_by_pt_1_normalizedChi2)
#         axis labels: ['Z lepton normalizedChi2', Events]
#         binning: [*default_num_bins, -2.5, 1.5]

#     all_Z_leptons_by_pt_1_innerTrackNormChi2:
#         expression: log(all_Z_leptons_by_pt_1_innerTrackNormChi2)
#         axis labels: ['Z lepton innerTrackNormChi2', Events]
#         binning: [*default_num_bins, -2.5, 1.5]

#     all_Z_leptons_by_pt_1_tkNormChi2:
#         expression: log(all_Z_leptons_by_pt_1_tkNormChi2)
#         axis labels: ['Z lepton tkNormChi2', Events]
#         binning: [*default_num_bins, -2.5, 1.5]

#     all_Z_leptons_by_pt_1_numberOfValidTrackerHitsInnerTrack:
#         expression: all_Z_leptons_by_pt_1_numberOfValidTrackerHitsInnerTrack
#         axis labels: ['Z lepton numberOfValidTrackerHitsInnerTrack', Events]
#         binning: [*default_num_bins, 0, 30]

#     all_Z_leptons_by_pt_1_numberOfValidTrackerHits:
#         expression: all_Z_leptons_by_pt_1_numberOfValidTrackerHits
#         axis labels: ['Z lepton numberOfValidTrackerHits', Events]
#         binning: [*default_num_bins, 0, 30]

#     all_Z_leptons_by_pt_1_numberOfValidMuonHits:
#         expression: all_Z_leptons_by_pt_1_numberOfValidMuonHits
#         axis labels: ['Z lepton numberOfValidMuonHits', Events]
#         binning: [*default_num_bins, 0, 50]

#     all_Z_leptons_by_pt_1_numberOfValidPixelHits:
#         expression: all_Z_leptons_by_pt_1_numberOfValidPixelHits
#         axis labels: ['Z lepton numberOfValidPixelHits', Events]
#         binning: [*default_num_bins, 0, 10]

#     all_Z_leptons_by_pt_1_numberOfMatchedStations:
#         expression: all_Z_leptons_by_pt_1_numberOfMatchedStations
#         axis labels: ['Z lepton numberOfMatchedStations', Events]
#         binning: [*default_num_bins, 0, 10]

#     all_Z_leptons_by_pt_1_numberOfMatches:
#         expression: all_Z_leptons_by_pt_1_numberOfMatches
#         axis labels: ['Z lepton numberOfMatches', Events]
#         binning: [*default_num_bins, 0, 10]

# #     all_Z_leptons_by_pt_1_isTrackerMuon:
# #         expression: all_Z_leptons_by_pt_1_isTrackerMuon
# #         axis labels: ['Z lepton isTrackerMuon', Events]
# #         binning: [2, -0.5, 1.5]

#     all_Z_leptons_by_pt_1_isGlobalMuonPromptTight:
#         expression: all_Z_leptons_by_pt_1_isGlobalMuonPromptTight
#         axis labels: ['Z lepton isGlobalMuonPromptTight', Events]
#         binning: [2, -0.5, 1.5]

#     all_Z_leptons_by_pt_1_isGoodMuon_1StationTight:
#         expression: all_Z_leptons_by_pt_1_isGoodMuon_1StationTight
#         axis labels: ['Z lepton isGoodMuon_1StationTight', Events]
#         binning: [2, -0.5, 1.5]

#     all_Z_leptons_by_pt_1_lepMVA:
#         expression: abs(all_Z_leptons_by_pt_1_lepMVA)
#         axis labels: ['Z lepton lepMVA', Events]
#         binning: [*default_num_bins, 0.7, 1]

# ##----------------
        
#     all_Z_leptons_by_pt_2_pt:
#         expression: all_Z_leptons_by_pt_2_pt
#         axis labels: ['Z lepton pT', Events]
#         binning: [*default_num_bins, 10, 110]

#     all_Z_leptons_by_pt_2_eta:
#         expression: abs(all_Z_leptons_by_pt_2_eta)
#         axis labels: ['Z lepton eta', Events]
#         binning: [*default_num_bins, 0, 2.5]

#     all_Z_leptons_by_pt_2_DBCorrectedRelIsoDR04:
#         expression: abs(all_Z_leptons_by_pt_2_DBCorrectedRelIsoDR04)
#         axis labels: ['Z lepton DBCorrectedRelIsoDR04', Events]
#         binning: [*default_num_bins, 0, 0.2]

#     all_Z_leptons_by_pt_2_pt_minus_samPT:
#         expression: all_Z_leptons_by_pt_2_pt - all_Z_leptons_by_pt_2_samPT
#         axis labels: ['Z lepton pT - samPT', Events]
#         binning: [*default_num_bins, -25, 25]

#     all_Z_leptons_by_pt_2_eta_minus_samEta:
#         expression: abs(all_Z_leptons_by_pt_2_eta - all_Z_leptons_by_pt_2_samEta)
#         axis labels: ['Z lepton eta - samEta', Events]
#         binning: [*default_num_bins, 0, 0.1]

#     all_Z_leptons_by_pt_2_phi_minus_samPhi:
#         expression: abs(all_Z_leptons_by_pt_2_phi - all_Z_leptons_by_pt_2_samPhi)
#         axis labels: ['Z lepton phi - samPhi', Events]
#         binning: [*default_num_bins, 0, 0.1]

#     all_Z_leptons_by_pt_2_jetBTagCSV:
#         expression: abs(all_Z_leptons_by_pt_2_jetBTagCSV)
#         axis labels: ['Z lepton jetBTagCSV', Events]
#         binning: [11, -0.1, 1]

#     all_Z_leptons_by_pt_2_jetPtRatio:
#         expression: all_Z_leptons_by_pt_2_jetPtRatio
#         axis labels: ['Z lepton jetPtRatio', Events]
#         binning: [*default_num_bins, 0.4, 1.2]

#     all_Z_leptons_by_pt_2_jetDeltaR:
#         expression: all_Z_leptons_by_pt_2_jetDeltaR
#         axis labels: ['Z lepton jetDeltaR', Events]
#         binning: [*default_num_bins, 0, 0.15]

#     all_Z_leptons_by_pt_2_SIP:
#         expression: log(abs(all_Z_leptons_by_pt_2_SIP))
#         axis labels: ['Z lepton SIP', Events]
#         binning: [*default_num_bins, -2.5, 2.5]

#     all_Z_leptons_by_pt_2_correctedD0Vertex:
#         expression: log(abs(all_Z_leptons_by_pt_2_correctedD0Vertex))
#         axis labels: ['Z lepton correctedD0Vertex', Events]
#         binning: [*default_num_bins, -10, 4]

#     all_Z_leptons_by_pt_2_correctedDZ:
#         expression: log(abs(all_Z_leptons_by_pt_2_correctedDZ))
#         axis labels: ['Z lepton correctedDZ', Events]
#         binning: [*default_num_bins, -10, 4]

#     all_Z_leptons_by_pt_2_IP:
#         expression: log(abs(all_Z_leptons_by_pt_2_IP))
#         axis labels: ['Z lepton IP', Events]
#         binning: [*default_num_bins, -10, 4]

#     all_Z_leptons_by_pt_2_IPError:
#         expression: all_Z_leptons_by_pt_2_IPError
#         axis labels: ['Z lepton IPError', Events]
#         binning: [*default_num_bins, 0, 0.01]

#     all_Z_leptons_by_pt_2_normalizedChi2:
#         expression: log(all_Z_leptons_by_pt_2_normalizedChi2)
#         axis labels: ['Z lepton normalizedChi2', Events]
#         binning: [*default_num_bins, -2.5, 1.5]

#     all_Z_leptons_by_pt_2_innerTrackNormChi2:
#         expression: log(all_Z_leptons_by_pt_2_innerTrackNormChi2)
#         axis labels: ['Z lepton innerTrackNormChi2', Events]
#         binning: [*default_num_bins, -2.5, 1.5]

#     all_Z_leptons_by_pt_2_tkNormChi2:
#         expression: log(all_Z_leptons_by_pt_2_tkNormChi2)
#         axis labels: ['Z lepton tkNormChi2', Events]
#         binning: [*default_num_bins, -2.5, 1.5]

#     all_Z_leptons_by_pt_2_numberOfValidTrackerHitsInnerTrack:
#         expression: all_Z_leptons_by_pt_2_numberOfValidTrackerHitsInnerTrack
#         axis labels: ['Z lepton numberOfValidTrackerHitsInnerTrack', Events]
#         binning: [*default_num_bins, 0, 30]

#     all_Z_leptons_by_pt_2_numberOfValidTrackerHits:
#         expression: all_Z_leptons_by_pt_2_numberOfValidTrackerHits
#         axis labels: ['Z lepton numberOfValidTrackerHits', Events]
#         binning: [*default_num_bins, 0, 30]

#     all_Z_leptons_by_pt_2_numberOfValidMuonHits:
#         expression: all_Z_leptons_by_pt_2_numberOfValidMuonHits
#         axis labels: ['Z lepton numberOfValidMuonHits', Events]
#         binning: [*default_num_bins, 0, 50]

#     all_Z_leptons_by_pt_2_numberOfValidPixelHits:
#         expression: all_Z_leptons_by_pt_2_numberOfValidPixelHits
#         axis labels: ['Z lepton numberOfValidPixelHits', Events]
#         binning: [*default_num_bins, 0, 10]

#     all_Z_leptons_by_pt_2_numberOfMatchedStations:
#         expression: all_Z_leptons_by_pt_2_numberOfMatchedStations
#         axis labels: ['Z lepton numberOfMatchedStations', Events]
#         binning: [*default_num_bins, 0, 10]

#     all_Z_leptons_by_pt_2_numberOfMatches:
#         expression: all_Z_leptons_by_pt_2_numberOfMatches
#         axis labels: ['Z lepton numberOfMatches', Events]
#         binning: [*default_num_bins, 0, 10]

# #     all_Z_leptons_by_pt_2_isTrackerMuon:
# #         expression: all_Z_leptons_by_pt_2_isTrackerMuon
# #         axis labels: ['Z lepton isTrackerMuon', Events]
# #         binning: [2, -0.5, 1.5]

#     all_Z_leptons_by_pt_2_isGlobalMuonPromptTight:
#         expression: all_Z_leptons_by_pt_2_isGlobalMuonPromptTight
#         axis labels: ['Z lepton isGlobalMuonPromptTight', Events]
#         binning: [2, -0.5, 1.5]

#     all_Z_leptons_by_pt_2_isGoodMuon_1StationTight:
#         expression: all_Z_leptons_by_pt_2_isGoodMuon_1StationTight
#         axis labels: ['Z lepton isGoodMuon_1StationTight', Events]
#         binning: [2, -0.5, 1.5]

#     all_Z_leptons_by_pt_2_lepMVA:
#         expression: abs(all_Z_leptons_by_pt_2_lepMVA)
#         axis labels: ['Z lepton lepMVA', Events]
#         binning: [*default_num_bins, 0.7, 1]

limits distributions:
#     twoBins:
#         expression: all_Z_leptons_by_pt_1_eta
#         axis labels: ['first Z lepton eta', Events]
#         binning: [2, -5, 5]

#     numJets:
#         expression: max(3, min(6, numJets))
#         axis labels: ['number of jets', Events]
#         binning: [4, 2.5, 6.5]

#     numMediumBJets:
#         expression: max(0, min(2, numMediumBJets))
#         axis labels: ['number of medium b-tagged jets', Events]
#         binning: [3, -0.5, 2.5]

    FinalBDT:
        expression: FinalBDT_ttZ_3l
        axis labels: ['final BDT', Events]
        binning: [4, [-1, -0.6, -0.2, 0.3, 1]]

    FinalBDT_Oct31:
        expression: FinalBDT_ttZ_3l_Oct31
        axis labels: ['final BDT Oct 31', Events]
        binning: [4, [-1, -0.7, -0.4, 0, 1]]

    FinalBDT_blind:
        expression: FinalBDT_ttZ_3l
        axis labels: ['final BDT', Events]
        binning: [2, [-1, -0.6, -0.2]]

    FinalBDT_Oct31_blind:
        expression: FinalBDT_ttZ_3l_Oct31
        axis labels: ['final BDT Oct 31', Events]
        binning: [2, [-1, -0.7, -0.4]]


