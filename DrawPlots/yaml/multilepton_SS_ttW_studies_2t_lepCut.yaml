label: ttV_SS_March16
output label: ttV_SS_March16
# label: ttV_SS_Jan23
# output label: ttV_SS_Jan23
luminosity: 19450.0
input_trees_directory: tree_files
output directory: histos/SS_ttW_studies_2t_lepCut
limits output directory: histos/SS_ttW_studies_2t_lepCut_forLimits

#options
skip systematics: true
limits skip systematics: false

#cuts
common cuts:
    cleanup: min_mass_leplep_all > 12
    2_leptons: numAllLeptons == 2
    z_mask: (numAllElectrons < 2 || abs(ZLike_mass_leplep_SF_all-91.0) > 10)
    lepton_pt: all_leptons_by_pt_1_pt > 20 && all_leptons_by_pt_2_pt > 10
    tight_charge: all_leptons_by_pt_1_CERN_tight_charge && all_leptons_by_pt_2_CERN_tight_charge ##Now includes conv_veto and inner_hits
    lepCSV: all_leptons_by_pt_1_lepCut > -1 && all_leptons_by_pt_2_lepCut > -1
    2_tight: all_leptons_by_pt_1_lepCut == 2 && all_leptons_by_pt_2_lepCut == 2
    same_charge: all_leptons_by_pt_1_tkCharge*all_leptons_by_pt_2_tkCharge == 1
    #pt_2020: all_leptons_by_pt_2_pt > 20
    #muon_chi2: all_leptons_by_pt_1_normalizedChi2 < 10 && all_leptons_by_pt_2_normalizedChi2 < 10
    
jet tag categories:
#     ge2j: ['numJets >= 2']
#     ge3j_bloose: ['numJets >= 3 && (numLooseBJets >= 2 || numMediumBJets >= 1)']
#     eq0j: ['numJets == 0']
#     eq1j: ['numJets == 1']

#     eq2j: ['numJets == 2']
#     eq3j_lf: ['numJets == 3 && numLooseBJets < 2 && numMediumBJets == 0']
#     ge4j_lf: ['numJets >= 4 && numLooseBJets < 2 && numMediumBJets == 0']

    eq3j_bloose: ['numJets == 3 && (numLooseBJets >= 2 || numMediumBJets >= 1)']
    ge4j_bloose: ['numJets >= 4 && (numLooseBJets >= 2 || numMediumBJets >= 1)']
    #ge3j_bloose_hiBDT: ['((numJets == 3 && FinalBDT_ttW_SS > 0.3) || (numJets >= 4 && FinalBDT_ttW_SS > 0.1)) && (numLooseBJets >= 2 || numMediumBJets >= 1)']

#     eq3j_bloose_hiBDT: ['numJets == 3 && (numLooseBJets >= 2 || numMediumBJets >= 1) && FinalBDT_ttW_SS > 0.3']
#     ge4j_bloose_hiBDT: ['numJets >= 4 && (numLooseBJets >= 2 || numMediumBJets >= 1) && FinalBDT_ttW_SS > 0.1']

#     ge3j_bloose: ['numJets >= 3 && (numLooseBJets >= 2 || numMediumBJets >= 1)']
#     ge3j_bloose_passChi2: ['numJets >= 3 && (numLooseBJets >= 2 || numMediumBJets >= 1) && max(all_leptons_by_pt_1_normalizedChi2, all_leptons_by_pt_2_normalizedChi2) < 10']
#     ge3j_bloose_failChi2: ['numJets >= 3 && (numLooseBJets >= 2 || numMediumBJets >= 1) && max(all_leptons_by_pt_1_normalizedChi2, all_leptons_by_pt_2_normalizedChi2) > 10']
    
#     ge0j_Zpeak: ['numJets >= 0 && abs(ZLike_mass_leplep_SF_all-91.0) < 10']
#     eq0j_Zpeak: ['numJets == 0 && abs(ZLike_mass_leplep_SF_all-91.0) < 10']
#     eq1j_Zpeak: ['numJets == 1 && abs(ZLike_mass_leplep_SF_all-91.0) < 10']
#     eq2j_Zpeak: ['numJets == 2 && abs(ZLike_mass_leplep_SF_all-91.0) < 10']

#     ge4j_ttH: ['numJets >= 4 && (numLooseBJets >= 2 || numMediumBJets >= 1) && (all_leptons_by_pt_1_pt + all_leptons_by_pt_2_pt + met_pt) > 100 && all_leptons_by_pt_2_pt > 20']

#     ttbar: ['((numJets == 2 && numMediumBJets >= 1) || (numJets == 3 && numMediumBJets == 1))']
#     ttbar_high_BDT: ['((numJets == 2 && numMediumBJets >= 1) || (numJets == 3 && numMediumBJets == 1)) && FinalBDT_ttW_SS > 0.6']

lepton categories:
    mu_mu:
        data samples: [DoubleMu]
        cuts:
            mu_mu: (all_leptons_by_pt_1_isMuon + all_leptons_by_pt_2_isMuon) == 2
            isDoubleMuTriggerPass: isDoubleMuTriggerPass
    mu_ele:
        data samples: [MuEG]
        cuts:
            mu_ele: (all_leptons_by_pt_1_isMuon + all_leptons_by_pt_2_isMuon) == 1
            isMuEGTriggerPass: isMuEGTriggerPass
    ele_ele:
        data samples: [DoubleElectron]
        cuts:
            ele_ele: (all_leptons_by_pt_1_isMuon + all_leptons_by_pt_2_isMuon) == 0
            isDoubleElectronTriggerPass: isDoubleElectronTriggerPass
#     SS:
#         data samples: [inclusive_data]
#         cuts:
#             trigger: '((dataset == "MC" && (isDoubleMuTriggerPass || isDoubleMuTriggerPass || isMuEGTriggerPass || isTripleElectronTriggerPass)) ||
#                 (dataset == "DoubleMu" && isDoubleMuTriggerPass) ||
#                 (dataset == "DoubleElectron" && (!isDoubleMuTriggerPass) && (isDoubleElectronTriggerPass || isTripleElectronTriggerPass)) ||
#                 (dataset == "MuEG" && (!isDoubleMuTriggerPass) && (!isDoubleElectronTriggerPass) && (!isTripleElectronTriggerPass) && isMuEGTriggerPass))'

weights:
    - RecoIDIsoSIPSF_2lep
    - weight_PU
    - csvWgtlf
    - csvWgthf
    - triggerSF
    - lepCutTight2LepSF
    - tightCharge2LepSF

## Include all Up and Down for limits
## Only include Up for histogram making    
systematics:
    - nominal
    ##- JERUp
    ##- JERDown
    - JESUp
    - JESDown
    - weight_PUUp
    - weight_PUDown
    - csvWgtlf_HFUp
    - csvWgtlf_HFDown
    - csvWgtlf_Stats1Up
    - csvWgtlf_Stats1Down
    - csvWgtlf_Stats2Up
    - csvWgtlf_Stats2Down
    - csvWgthf_LFUp
    - csvWgthf_LFDown
    - csvWgthf_Stats1Up
    - csvWgthf_Stats1Down
    - csvWgthf_Stats2Up
    - csvWgthf_Stats2Down
    - csvWgtc_Err1Up
    - csvWgtc_Err1Down
    - csvWgtc_Err2Up
    - csvWgtc_Err2Down


#weights: all ---> weight by everything in "weights" section above
#weights: none ---> don't apply any weight
#weights: all+weight1 ---> weight by everything in the "weights" section above, and also by weight1
#weights: all+weight1-weight2 ---> weight by everything in the "weights" section above except for weight2, and also by weight1
#weights: weight1+weight2 ---> weight only by weight1 and weight2
#same idea for systematics
samples:
    #VH_TauMu:
    ttH125:
    wz_lll:
        weights: ['common', '( 1.0+ 0.4*(numJets == 3) + 0.6*(numJets >= 4) )']
    wz_lf_lll:
        weights: ['common', '( 1.0+ 0.4*(numJets == 3) + 0.6*(numJets >= 4) )']
    wz_cc_lll:
        weights: ['common', '( 1.0+ 0.4*(numJets == 3) + 0.6*(numJets >= 4) )']
    wz_b_lll:
        weights: ['common', '( 1.0+ 0.4*(numJets == 3) + 0.6*(numJets >= 4) )']
    wz_bb_lll:
        weights: ['common', '( 1.0+ 0.4*(numJets == 3) + 0.6*(numJets >= 4) )']
    zz_llll:
        weights: ['common', '( 1.0+ 0.4*(numJets == 3) + 0.6*(numJets >= 4) )']
    zz_lf_llll:
        weights: ['common', '( 1.0+ 0.4*(numJets == 3) + 0.6*(numJets >= 4) )']
    zz_cc_llll:
        weights: ['common', '( 1.0+ 0.4*(numJets == 3) + 0.6*(numJets >= 4) )']
    zz_b_llll:
        weights: ['common', '( 1.0+ 0.4*(numJets == 3) + 0.6*(numJets >= 4) )']
    zz_bb_llll:
        weights: ['common', '( 1.0+ 0.4*(numJets == 3) + 0.6*(numJets >= 4) )']
    zz_lowmll:
        weights: ['common', '( 1.0+ 0.4*(numJets == 3) + 0.6*(numJets >= 4) )']
    www:
    wwz:
    #zjets_0p:
    #zjets_1p:
    #zjets_2p:
    #zjets_3p:
    #zjets_4p:
    ttbar_lj:
    ttbar_ll:
    ttbar_lj_99:
        tree sample: ttbar_lj
        additional cuts: ['(all_leptons_by_pt_1_genMotherId == -99 || all_leptons_by_pt_2_genMotherId == -99)']
    ttbar_ll_99:
        tree sample: ttbar_ll
        additional cuts: ['(all_leptons_by_pt_1_genMotherId == -99 || all_leptons_by_pt_2_genMotherId == -99)']
    ttbar_lj_NP_sideband:
        tree sample: ttbar_lj
        additional cuts: ['(all_leptons_by_pt_1_lepCut < 2 || all_leptons_by_pt_2_lepCut < 2)']
        cuts to remove: ['all_leptons_by_pt_1_lepCut == 2 && all_leptons_by_pt_2_lepCut == 2']
    ttbar_ll_NP_sideband:
        tree sample: ttbar_ll
        additional cuts: ['(all_leptons_by_pt_1_lepCut < 2 || all_leptons_by_pt_2_lepCut < 2)']
        cuts to remove: ['all_leptons_by_pt_1_lepCut == 2 && all_leptons_by_pt_2_lepCut == 2']
    ttbarW:
    ttbarWW:
    ttbarZ:
    ttbarG:
    ttbarGStar_ee:
    ttbarGStar_mm:
    ttbarGStar_tt:
    tbZ_ll:
    WpWpqq:
    #WmWmqq: #Does not exist yet
    WWDPI:
    inclusive_data:
        weights: none
        systematics: nominal
    DoubleMu:
        weights: none
        systematics: nominal
    MuEG:
        weights: none
        systematics: nominal
    DoubleElectron:
        weights: none
        systematics: nominal
#     inclusive_data_NP_sideband:
#         additional cuts: ['(all_leptons_by_pt_1_lepCut < 2 || all_leptons_by_pt_2_lepCut < 2)']
#         cuts to remove: ['all_leptons_by_pt_1_lepCut == 2 && all_leptons_by_pt_2_lepCut == 2']
#         weights: DataDrivenFR_NP_2_tight
#         systematics: [40PercentRateUp, 40PercentRateDown]
    DoubleMu_NP_sideband:
        tree sample: DoubleMu
        additional cuts: ['(all_leptons_by_pt_1_lepCut < 2 || all_leptons_by_pt_2_lepCut < 2)']
        cuts to remove: ['all_leptons_by_pt_1_lepCut == 2 && all_leptons_by_pt_2_lepCut == 2']
        weights: DataDrivenFRLepCut_NP_2_tight
        systematics: [NP_FR_lepCut_SS_2t_mu_rateUp, NP_FR_lepCut_SS_2t_mu_rateDown, NP_FR_lepCut_SS_2t_mu_pt_20_30_rateUp, NP_FR_lepCut_SS_2t_mu_pt_20_30_rateDown, NP_FR_lepCut_SS_2t_mu_pt_30_inf_rateUp, NP_FR_lepCut_SS_2t_mu_pt_30_inf_rateDown]
    DoubleMu_NP_sideband_pos:
        tree sample: DoubleMu
        additional cuts: ['( (all_leptons_by_pt_1_lepCut == 2) + (all_leptons_by_pt_2_lepCut == 2) == 1)']
        cuts to remove: ['all_leptons_by_pt_1_lepCut == 2 && all_leptons_by_pt_2_lepCut == 2']
        weights: DataDrivenFRLepCut_NP_2_tight
        systematics: [NP_FR_lepCut_SS_2t_mu_rateUp, NP_FR_lepCut_SS_2t_mu_rateDown, NP_FR_lepCut_SS_2t_mu_pt_20_30_rateUp, NP_FR_lepCut_SS_2t_mu_pt_20_30_rateDown, NP_FR_lepCut_SS_2t_mu_pt_30_inf_rateUp, NP_FR_lepCut_SS_2t_mu_pt_30_inf_rateDown]
    DoubleMu_NP_sideband_neg:
        tree sample: DoubleMu
        additional cuts: ['( (all_leptons_by_pt_1_lepCut == 2) + (all_leptons_by_pt_2_lepCut == 2) == 0)']
        cuts to remove: ['all_leptons_by_pt_1_lepCut == 2 && all_leptons_by_pt_2_lepCut == 2']
        weights: DataDrivenFRLepCut_NP_2_tight
        systematics: [NP_FR_lepCut_SS_2t_mu_rateUp, NP_FR_lepCut_SS_2t_mu_rateDown, NP_FR_lepCut_SS_2t_mu_pt_20_30_rateUp, NP_FR_lepCut_SS_2t_mu_pt_20_30_rateDown, NP_FR_lepCut_SS_2t_mu_pt_30_inf_rateUp, NP_FR_lepCut_SS_2t_mu_pt_30_inf_rateDown]
    MuEG_NP_sideband:
        tree sample: MuEG
        additional cuts: ['(all_leptons_by_pt_1_lepCut < 2 || all_leptons_by_pt_2_lepCut < 2)']
        cuts to remove: ['all_leptons_by_pt_1_lepCut == 2 && all_leptons_by_pt_2_lepCut == 2']
        weights: DataDrivenFRLepCut_NP_2_tight
        systematics: [NP_FR_lepCut_SS_2t_mu_rateUp, NP_FR_lepCut_SS_2t_mu_rateDown, NP_FR_lepCut_SS_2t_ele_rateUp, NP_FR_lepCut_SS_2t_ele_rateDown, NP_FR_lepCut_SS_2t_mu_pt_20_30_rateUp, NP_FR_lepCut_SS_2t_mu_pt_20_30_rateDown, NP_FR_lepCut_SS_2t_mu_pt_30_inf_rateUp, NP_FR_lepCut_SS_2t_mu_pt_30_inf_rateDown, NP_FR_lepCut_SS_2t_ele_pt_20_40_rateUp, NP_FR_lepCut_SS_2t_ele_pt_20_40_rateDown, NP_FR_lepCut_SS_2t_ele_pt_40_inf_rateUp, NP_FR_lepCut_SS_2t_ele_pt_40_inf_rateDown]
    DoubleElectron_NP_sideband:
        tree sample: DoubleElectron
        additional cuts: ['(all_leptons_by_pt_1_lepCut < 2 || all_leptons_by_pt_2_lepCut < 2)']
        cuts to remove: ['all_leptons_by_pt_1_lepCut == 2 && all_leptons_by_pt_2_lepCut == 2']
        weights: DataDrivenFRLepCut_NP_2_tight
        systematics: [NP_FR_lepCut_SS_2t_ele_rateUp, NP_FR_lepCut_SS_2t_ele_rateDown, NP_FR_lepCut_SS_2t_ele_pt_20_40_rateUp, NP_FR_lepCut_SS_2t_ele_pt_20_40_rateDown, NP_FR_lepCut_SS_2t_ele_pt_40_inf_rateUp, NP_FR_lepCut_SS_2t_ele_pt_40_inf_rateDown]
#     inclusive_data_QF_sideband:
#         additional cuts: ['all_leptons_by_pt_1_tkCharge*all_leptons_by_pt_2_tkCharge == -1']
#         cuts to remove: ['all_leptons_by_pt_1_tkCharge*all_leptons_by_pt_2_tkCharge == 1']
#         weights: DataDrivenFR_NP_2_tight
#         systematics: [40PercentRateUp, 40PercentRateDown]
    MuEG_QF_sideband:
        additional cuts: ['all_leptons_by_pt_1_tkCharge*all_leptons_by_pt_2_tkCharge == -1']
        cuts to remove: ['all_leptons_by_pt_1_tkCharge*all_leptons_by_pt_2_tkCharge == 1']
        weights: DataDrivenFRLepCut_QF_sel_2_tight
        systematics: [QF_FR_lepCut_SS_2t_ele_rateUp, QF_FR_lepCut_SS_2t_ele_rateDown]
    DoubleElectron_QF_sideband:
        additional cuts: ['all_leptons_by_pt_1_tkCharge*all_leptons_by_pt_2_tkCharge == -1']
        cuts to remove: ['all_leptons_by_pt_1_tkCharge*all_leptons_by_pt_2_tkCharge == 1']
        weights: DataDrivenFRLepCut_QF_sel_2_tight
        systematics: [QF_FR_lepCut_SS_2t_ele_rateUp, QF_FR_lepCut_SS_2t_ele_rateDown]
#     MuEG_QF_sideband_neg:
#         tree sample: MuEG_QF_sideband
#         additional cuts: ['all_leptons_by_pt_1_tkCharge*all_leptons_by_pt_2_tkCharge == -1', '(all_leptons_by_pt_1_lepCut < 2 || all_leptons_by_pt_2_lepCut < 2)']
#         cuts to remove: ['all_leptons_by_pt_1_tkCharge*all_leptons_by_pt_2_tkCharge == 1', 'all_leptons_by_pt_1_lepCut == 2 && all_leptons_by_pt_2_lepCut == 2']
#         #weights: -1.0*DataDrivenFRLepCut_QF_presel_2_tight*DataDrivenFRLepCut_NP_2_tight
#         weights: -2.0*DataDrivenFRLepCut_QF_presel_2_tight*DataDrivenFRLepCut_NP_2_tight
#         systematics: [QF_FR_lepCut_SS_2t_ele_rateUp, QF_FR_lepCut_SS_2t_ele_rateDown]
#     DoubleElectron_QF_sideband_neg:
#         tree sample: DoubleElectron_QF_sideband
#         additional cuts: ['all_leptons_by_pt_1_tkCharge*all_leptons_by_pt_2_tkCharge == -1', '(all_leptons_by_pt_1_lepCut < 2 || all_leptons_by_pt_2_lepCut < 2)']
#         cuts to remove: ['all_leptons_by_pt_1_tkCharge*all_leptons_by_pt_2_tkCharge == 1', 'all_leptons_by_pt_1_lepCut == 2 && all_leptons_by_pt_2_lepCut == 2']
#         #weights: -1.0*DataDrivenFRLepCut_QF_presel_2_tight*DataDrivenFRLepCut_NP_2_tight
#         weights: -2.0*DataDrivenFRLepCut_QF_presel_2_tight*DataDrivenFRLepCut_NP_2_tight
#         systematics: [QF_FR_lepCut_SS_2t_ele_rateUp, QF_FR_lepCut_SS_2t_ele_rateDown]
#     DoubleMu_NP_sideband_HF:
#         tree sample: DoubleMu
#         additional cuts: ['(all_leptons_by_pt_1_lepCut < 0 || all_leptons_by_pt_2_lepCut < 0)']
#         cuts to remove: ['all_leptons_by_pt_1_lepCut == 2 && all_leptons_by_pt_2_lepCut == 2', 'all_leptons_by_pt_1_lepCut > -1 && all_leptons_by_pt_2_lepCut > -1']
#         weights: none
#         systematics: nominal
#     MuEG_NP_sideband_HF:
#         tree sample: MuEG
#         additional cuts: ['(all_leptons_by_pt_1_lepCut < 0 || all_leptons_by_pt_2_lepCut < 0)']
#         cuts to remove: ['all_leptons_by_pt_1_lepCut == 2 && all_leptons_by_pt_2_lepCut == 2', 'all_leptons_by_pt_1_lepCut > -1 && all_leptons_by_pt_2_lepCut > -1']
#         weights: none
#         systematics: nominal
#     DoubleElectron_NP_sideband_HF:
#         tree sample: DoubleElectron
#         additional cuts: ['(all_leptons_by_pt_1_lepCut < 0 || all_leptons_by_pt_2_lepCut < 0)']
#         cuts to remove: ['all_leptons_by_pt_1_lepCut == 2 && all_leptons_by_pt_2_lepCut == 2', 'all_leptons_by_pt_1_lepCut > -1 && all_leptons_by_pt_2_lepCut > -1']
#         weights: none
#         systematics: nominal
#     DoubleMu_NP_sideband_pos_unscaled:
#         tree sample: DoubleMu
#         additional cuts: ['(all_leptons_by_pt_1_lepCut == 2) + (all_leptons_by_pt_2_lepCut == 2) == 1']
#         cuts to remove: ['all_leptons_by_pt_1_lepCut == 2 && all_leptons_by_pt_2_lepCut == 2']
#         weights: none
#         systematics: [NP_FR_lepCut_SS_2t_mu_rateUp, NP_FR_lepCut_SS_2t_mu_rateDown, NP_FR_lepCut_SS_2t_mu_pt_20_30_rateUp, NP_FR_lepCut_SS_2t_mu_pt_20_30_rateDown, NP_FR_lepCut_SS_2t_mu_pt_30_inf_rateUp, NP_FR_lepCut_SS_2t_mu_pt_30_inf_rateDown]
#     MuEG_NP_sideband_pos_unscaled:
#         tree sample: MuEG
#         additional cuts: ['(all_leptons_by_pt_1_lepCut == 2) + (all_leptons_by_pt_2_lepCut == 2) == 1']
#         cuts to remove: ['all_leptons_by_pt_1_lepCut == 2 && all_leptons_by_pt_2_lepCut == 2']
#         weights: none
#         systematics: [NP_FR_lepCut_SS_2t_mu_rateUp, NP_FR_lepCut_SS_2t_mu_rateDown, NP_FR_lepCut_SS_2t_ele_rateUp, NP_FR_lepCut_SS_2t_ele_rateDown, NP_FR_lepCut_SS_2t_mu_pt_20_30_rateUp, NP_FR_lepCut_SS_2t_mu_pt_20_30_rateDown, NP_FR_lepCut_SS_2t_mu_pt_30_inf_rateUp, NP_FR_lepCut_SS_2t_mu_pt_30_inf_rateDown, NP_FR_lepCut_SS_2t_ele_pt_20_40_rateUp, NP_FR_lepCut_SS_2t_ele_pt_20_40_rateDown, NP_FR_lepCut_SS_2t_ele_pt_40_inf_rateUp, NP_FR_lepCut_SS_2t_ele_pt_40_inf_rateDown]
#     DoubleElectron_NP_sideband_pos_unscaled:
#         tree sample: DoubleElectron
#         additional cuts: ['(all_leptons_by_pt_1_lepCut == 2) + (all_leptons_by_pt_2_lepCut == 2) == 1']
#         cuts to remove: ['all_leptons_by_pt_1_lepCut == 2 && all_leptons_by_pt_2_lepCut == 2']
#         weights: none
#         systematics: [NP_FR_lepCut_SS_2t_ele_rateUp, NP_FR_lepCut_SS_2t_ele_rateDown, NP_FR_lepCut_SS_2t_ele_pt_20_40_rateUp, NP_FR_lepCut_SS_2t_ele_pt_20_40_rateDown, NP_FR_lepCut_SS_2t_ele_pt_40_inf_rateUp, NP_FR_lepCut_SS_2t_ele_pt_40_inf_rateDown]
    DoubleMu_NP_sideband_scale_0p5:
        tree sample: DoubleMu
        additional cuts: ['(all_leptons_by_pt_1_lepCut < 2 || all_leptons_by_pt_2_lepCut < 2)']
        cuts to remove: ['all_leptons_by_pt_1_lepCut == 2 && all_leptons_by_pt_2_lepCut == 2']
        weights: DataDrivenFRLepCut_NP_2_tight*0.5
        systematics: [NP_FR_lepCut_SS_2t_mu_rateUp, NP_FR_lepCut_SS_2t_mu_rateDown, NP_FR_lepCut_SS_2t_mu_pt_20_30_rateUp, NP_FR_lepCut_SS_2t_mu_pt_20_30_rateDown, NP_FR_lepCut_SS_2t_mu_pt_30_inf_rateUp, NP_FR_lepCut_SS_2t_mu_pt_30_inf_rateDown]
    MuEG_NP_sideband_scale_0p6:
        tree sample: MuEG
        additional cuts: ['(all_leptons_by_pt_1_lepCut < 2 || all_leptons_by_pt_2_lepCut < 2)']
        cuts to remove: ['all_leptons_by_pt_1_lepCut == 2 && all_leptons_by_pt_2_lepCut == 2']
        weights: DataDrivenFRLepCut_NP_2_tight*0.6
        systematics: [NP_FR_lepCut_SS_2t_mu_rateUp, NP_FR_lepCut_SS_2t_mu_rateDown, NP_FR_lepCut_SS_2t_ele_rateUp, NP_FR_lepCut_SS_2t_ele_rateDown, NP_FR_lepCut_SS_2t_mu_pt_20_30_rateUp, NP_FR_lepCut_SS_2t_mu_pt_20_30_rateDown, NP_FR_lepCut_SS_2t_mu_pt_30_inf_rateUp, NP_FR_lepCut_SS_2t_mu_pt_30_inf_rateDown, NP_FR_lepCut_SS_2t_ele_pt_20_40_rateUp, NP_FR_lepCut_SS_2t_ele_pt_20_40_rateDown, NP_FR_lepCut_SS_2t_ele_pt_40_inf_rateUp, NP_FR_lepCut_SS_2t_ele_pt_40_inf_rateDown]
    DoubleElectron_NP_sideband_scale_0p7:
        tree sample: DoubleElectron
        additional cuts: ['(all_leptons_by_pt_1_lepCut < 2 || all_leptons_by_pt_2_lepCut < 2)']
        cuts to remove: ['all_leptons_by_pt_1_lepCut == 2 && all_leptons_by_pt_2_lepCut == 2']
        weights: DataDrivenFRLepCut_NP_2_tight*0.7
        systematics: [NP_FR_lepCut_SS_2t_ele_rateUp, NP_FR_lepCut_SS_2t_ele_rateDown, NP_FR_lepCut_SS_2t_ele_pt_20_40_rateUp, NP_FR_lepCut_SS_2t_ele_pt_20_40_rateDown, NP_FR_lepCut_SS_2t_ele_pt_40_inf_rateUp, NP_FR_lepCut_SS_2t_ele_pt_40_inf_rateDown]

    ttbarW_full_match:
        tree sample: ttbarW
        additional cuts: ['Full_match_ttW_SS_Bbqq == 1']
    ttbarW_part_match:
        tree sample: ttbarW
        additional cuts: ['(Full_match_ttW_SS_Bbqq == 1 || Full_match_ttW_SS_Bbq == 1 || Full_match_ttW_SS_Bqq == 1 || Full_match_ttW_SS_bqq == 1)']
    ttbar_lj_full_match:
        tree sample: ttbar_lj
        additional cuts: ['Full_match_ttbar_fake_SS_Bqq == 1']
    ttbar_lj_part_match:
        tree sample: ttbar_lj
        additional cuts: ['(Full_match_ttbar_fake_SS_Bqq == 1 || Full_match_ttbar_fake_SS_Bq == 1)']
                
aliases:
    - &default_num_bins 10

distributions:
#     numAllLeptons:
#         expression: numAllLeptons
#         axis labels: ['number of leptons', Events]
#         binning: [2, 1.5, 3.5]

#     numAllMuons:
#         expression: numAllMuons
#         axis labels: ['number of muons', Events]
#         binning: [4, -0.5, 3.5]

    numJets:
        expression: numJets
        axis labels: ['number of jets', Events]
        binning: [6, 1.5, 7.5]
        #binning: [6, -0.5, 5.5]

    numLooseBJets:
        expression: numLooseBJets
        axis labels: ['number of loose b-tagged jets', Events]
        binning: [5, -0.5, 4.5]

    numMediumBJets:
        expression: numMediumBJets
        axis labels: ['number of medium b-tagged jets', Events]
        binning: [4, -0.5, 3.5]

    numTightBJets:
        expression: numTightBJets
        axis labels: ['number of tight b-tagged jets', Events]
        binning: [4, -0.5, 3.5]

    all_leptons_by_pt_1_tkCharge:
        expression: all_leptons_by_pt_1_tkCharge
        axis labels: ['First lepton charge', Events]
        binning: [3, -1.5, 1.5]

    all_leptons_by_pt_1_pt:
        expression: all_leptons_by_pt_1_pt
        axis labels: ['First lepton pT', Events]
        binning: [*default_num_bins, 20, 270]
        #binning: [*default_num_bins, 20, 120]

    all_leptons_by_pt_2_pt:
        expression: all_leptons_by_pt_2_pt
        axis labels: ['Second lepton pT', Events]
        binning: [*default_num_bins, 10, 110]
        #binning: [*default_num_bins, 10, 60]

    all_leptons_by_pt_1_eta:
        expression: abs(all_leptons_by_pt_1_eta)
        axis labels: ['First lepton eta', Events]
        binning: [*default_num_bins, 0, 2.5]

    all_leptons_by_pt_2_eta:
        expression: abs(all_leptons_by_pt_2_eta)
        axis labels: ['Second lepton eta', Events]
        binning: [*default_num_bins, 0, 2.5]

    max_lepton_eta:
        expression: max(abs(all_leptons_by_pt_1_eta), abs(all_leptons_by_pt_2_eta))
        axis labels: ['Max lepton eta', Events]
        binning: [*default_num_bins, 0, 2.5]

# #     all_leptons_by_pt_1_lfLepVeto:
# #         expression: all_leptons_by_pt_1_numberOfMatchedStations >= 2 && all_leptons_by_pt_1_isTrackerMuon && all_leptons_by_pt_1_isGlobalMuonPromptTight && all_leptons_by_pt_1_isGoodMuon_1StationTight
# #         axis labels: ['First lepton lfLepVeto', Events]
# #         binning: [2, -0.5, 1.5]

# #     all_leptons_by_pt_2_lfLepVeto:
# #         expression: all_leptons_by_pt_2_numberOfMatchedStations >= 2 && all_leptons_by_pt_2_isTrackerMuon && all_leptons_by_pt_2_isGlobalMuonPromptTight && all_leptons_by_pt_2_isGoodMuon_1StationTight
# #         axis labels: ['Second lepton lfLepVeto', Events]
# #         binning: [2, -0.5, 1.5]

# # #     all_leptons_by_pt_1_jetBTagCSV:
# # #         expression: all_leptons_by_pt_1_jetBTagCSV
# # #         axis labels: ['First lepton jetBTagCSV', Events]
# # #         binning: [11, -0.1, 1]

# # #     all_leptons_by_pt_2_jetBTagCSV:
# # #         expression: all_leptons_by_pt_2_jetBTagCSV
# # #         axis labels: ['Second lepton jetBTagCSV', Events]
# # #         binning: [11, -0.1, 1]

# # #     NP_lepton_jetBTagCSV:
# # #         expression: ((all_leptons_by_pt_2_lepCut <= all_leptons_by_pt_1_lepCut)*all_leptons_by_pt_2_jetBTagCSV + (all_leptons_by_pt_2_lepCut > all_leptons_by_pt_1_lepCut)*all_leptons_by_pt_1_jetBTagCSV)
# # #         axis labels: ['NP lepton jetBTagCSV', Events]
# # #         binning: [11, -0.1, 1]
                                
# #     min_lepton_lepMVA:
# #         expression: min(all_leptons_by_pt_1_lepMVA, all_leptons_by_pt_2_lepMVA)
# #         axis labels: ['Min lepton lepMVA', Events]
# #         binning: [20, -1, 1]

# #     max_lepton_DBCorrectedRelIsoDR04:
# #         expression: max(all_leptons_by_pt_1_DBCorrectedRelIsoDR04, all_leptons_by_pt_2_DBCorrectedRelIsoDR04)
# #         axis labels: ['Max lepton DBCorrectedRelIsoDR04', Events]
# #         binning: [10, 0, 0.4]

# #     max_lepton_jetBTagCSV:
# #         expression: max(all_leptons_by_pt_1_jetBTagCSV, all_leptons_by_pt_2_jetBTagCSV)
# #         axis labels: ['Max lepton jetBTagCSV', Events]
# #         binning: [11, -0.1, 1]

# #     min_lepton_jetPtRatio:
# #         expression: min(all_leptons_by_pt_1_jetPtRatio, all_leptons_by_pt_2_jetPtRatio)
# #         axis labels: ['Min lepton jetPtRatio', Events]
# #         binning: [10, 0, 1]

# #     max_lepton_jetDeltaR:
# #         expression: max(all_leptons_by_pt_1_jetDeltaR, all_leptons_by_pt_2_jetDeltaR)
# #         axis labels: ['Max lepton jetDeltaR', Events]
# #         binning: [10, 0, 0.3]

# #     max_lepton_IP:
# #         expression: 10000*max(abs(all_leptons_by_pt_1_IP), abs(all_leptons_by_pt_2_IP))
# #         axis labels: ['Max lepton IP (#mum)', Events]
# #         binning: [10, 0, 200]

# #     max_lepton_SIP:
# #         expression: max(abs(all_leptons_by_pt_1_SIP), abs(all_leptons_by_pt_2_SIP))
# #         axis labels: ['Max lepton SIP', Events]
# #         binning: [10, 0, 10]

# #     max_lepton_correctedD0Vertex:
# #         expression: 10000*max(abs(all_leptons_by_pt_1_correctedD0Vertex), abs(all_leptons_by_pt_2_correctedD0Vertex))
# #         axis labels: ['Max lepton correctedD0Vertex (#mum)', Events]
# #         binning: [10, 0, 100]

# #     max_lepton_correctedDZ:
# #         expression: 10000*max(abs(all_leptons_by_pt_1_correctedDZ), abs(all_leptons_by_pt_2_correctedDZ))
# #         axis labels: ['Max lepton correctedDZ (#mum)', Events]
# #         binning: [10, 0, 500]

# #     min_lepton_numberOfMatchedStations:
# #         expression: min(all_leptons_by_pt_1_numberOfMatchedStations, all_leptons_by_pt_2_numberOfMatchedStations)
# #         axis labels: ['Min lepton numberOfMatchedStations', Events]
# #         binning: [7, -0.5, 6.5]

# #     min_lepton_isTrackerMuon:
# #         expression: min(all_leptons_by_pt_1_isTrackerMuon, all_leptons_by_pt_2_isTrackerMuon)
# #         axis labels: ['Min lepton isTrackerMuon', Events]
# #         binning: [2, -0.5, 1.5]

# #     min_lepton_isGlobalMuon:
# #         expression: min(all_leptons_by_pt_1_isGlobalMuon, all_leptons_by_pt_2_isGlobalMuon)
# #         axis labels: ['Min lepton isGlobalMuon', Events]
# #         binning: [2, -0.5, 1.5]

# #     min_lepton_numberOfValidMuonHits:
# #         expression: min(all_leptons_by_pt_1_numberOfValidMuonHits, all_leptons_by_pt_2_numberOfValidMuonHits)
# #         axis labels: ['Min lepton numberOfValidMuonHits', Events]
# #         binning: [16, 0, 48]

# #     max_lepton_normalizedChi2:
# #         expression: max(all_leptons_by_pt_1_normalizedChi2, all_leptons_by_pt_2_normalizedChi2)
# #         axis labels: ['Max lepton normalizedChi2', Events]
# #         binning: [30, 0, 60]

# #     min_lepton_isGlobalMuonPromptTight:
# #         expression: min(all_leptons_by_pt_1_isGlobalMuonPromptTight, all_leptons_by_pt_2_isGlobalMuonPromptTight)
# #         axis labels: ['Min lepton isGlobalMuonPromptTight', Events]
# #         binning: [2, -0.5, 1.5]

# #     min_lepton_isGoodMuon_1StationTight:
# #         expression: min(all_leptons_by_pt_1_isGoodMuon_1StationTight, all_leptons_by_pt_2_isGoodMuon_1StationTight)
# #         axis labels: ['Min lepton isGoodMuon_1StationTight', Events]
# #         binning: [2, -0.5, 1.5]

# #     min_lepton_numberOfValidTrackerHits:
# #         expression: min(all_leptons_by_pt_1_numberOfValidTrackerHits, all_leptons_by_pt_2_numberOfValidTrackerHits)
# #         axis labels: ['Min lepton numberOfValidTrackerHits', Events]
# #         binning: [12, 0, 24]

# #     min_lepton_numberOfLayersWithMeasurement:
# #         expression: min(all_leptons_by_pt_1_numberOfLayersWithMeasurement, all_leptons_by_pt_2_numberOfLayersWithMeasurement)
# #         axis labels: ['Min lepton numberOfLayersWithMeasurement', Events]
# #         binning: [8, 0, 16]

#     #####################
#     ## High chi2 lepton
#     #####################
#     chi2_lepton_pt:
#         expression: (all_leptons_by_pt_1_normalizedChi2 > 10)*all_leptons_by_pt_1_pt + (all_leptons_by_pt_2_normalizedChi2 > 10)*all_leptons_by_pt_2_pt
#         axis labels: ['High chi2 lepton pT', Events]
#         binning: [11, -5, 270]
#         #binning: [*default_num_bins, 20, 120]

#     chi2_lepton_eta:
#         expression: abs((all_leptons_by_pt_1_normalizedChi2 > 10)*all_leptons_by_pt_1_eta + (all_leptons_by_pt_2_normalizedChi2 > 10)*all_leptons_by_pt_2_eta)
#         axis labels: ['High chi2 lepton eta', Events]
#         binning: [*default_num_bins, 0, 2.5]
        
#     chi2_lepton_lepMVA:
#         expression: (all_leptons_by_pt_1_normalizedChi2 > 10)*all_leptons_by_pt_1_lepMVA + (all_leptons_by_pt_2_normalizedChi2 > 10)*all_leptons_by_pt_2_lepMVA
#         axis labels: ['High chi2 lepton lepMVA', Events]
#         binning: [20, -1, 1]

#     chi2_lepton_DBCorrectedRelIsoDR04:
#         expression: (all_leptons_by_pt_1_normalizedChi2 > 10)*all_leptons_by_pt_1_DBCorrectedRelIsoDR04 + (all_leptons_by_pt_2_normalizedChi2 > 10)*all_leptons_by_pt_2_DBCorrectedRelIsoDR04
#         axis labels: ['High chi2 lepton DBCorrectedRelIsoDR04', Events]
#         binning: [10, 0, 0.4]

#     chi2_lepton_jetBTagCSV:
#         expression: (all_leptons_by_pt_1_normalizedChi2 > 10)*all_leptons_by_pt_1_jetBTagCSV + (all_leptons_by_pt_2_normalizedChi2 > 10)*all_leptons_by_pt_2_jetBTagCSV
#         axis labels: ['High chi2 lepton jetBTagCSV', Events]
#         binning: [11, -0.1, 1]

#     chi2_lepton_jetPtRatio:
#         expression: (all_leptons_by_pt_1_normalizedChi2 > 10)*all_leptons_by_pt_1_jetPtRatio + (all_leptons_by_pt_2_normalizedChi2 > 10)*all_leptons_by_pt_2_jetPtRatio
#         axis labels: ['High chi2 lepton jetPtRatio', Events]
#         binning: [10, 0, 1]

#     chi2_lepton_jetDeltaR:
#         expression: (all_leptons_by_pt_1_normalizedChi2 > 10)*all_leptons_by_pt_1_jetDeltaR + (all_leptons_by_pt_2_normalizedChi2 > 10)*all_leptons_by_pt_2_jetDeltaR
#         axis labels: ['High chi2 lepton jetDeltaR', Events]
#         binning: [10, 0, 0.3]

#     chi2_lepton_IP:
#         expression: 10000*abs((all_leptons_by_pt_1_normalizedChi2 > 10)*all_leptons_by_pt_1_IP + (all_leptons_by_pt_2_normalizedChi2 > 10)*all_leptons_by_pt_2_IP)
#         axis labels: ['High chi2 lepton IP (#mum)', Events]
#         binning: [10, 0, 200]

#     chi2_lepton_SIP:
#         expression: (all_leptons_by_pt_1_normalizedChi2 > 10)*all_leptons_by_pt_1_SIP + (all_leptons_by_pt_2_normalizedChi2 > 10)*all_leptons_by_pt_2_SIP
#         axis labels: ['High chi2 lepton SIP', Events]
#         binning: [10, 0, 10]

#     chi2_lepton_correctedD0Vertex:
#         expression: 10000*abs((all_leptons_by_pt_1_normalizedChi2 > 10)*all_leptons_by_pt_1_correctedD0Vertex + (all_leptons_by_pt_2_normalizedChi2 > 10)*all_leptons_by_pt_2_correctedD0Vertex)
#         axis labels: ['High chi2 lepton correctedD0Vertex (#mum)', Events]
#         binning: [10, 0, 100]

#     chi2_lepton_correctedDZ:
#         expression: 10000*abs((all_leptons_by_pt_1_normalizedChi2 > 10)*all_leptons_by_pt_1_correctedDZ + (all_leptons_by_pt_2_normalizedChi2 > 10)*all_leptons_by_pt_2_correctedDZ)
#         axis labels: ['High chi2 lepton correctedDZ (#mum)', Events]
#         binning: [10, 0, 500]

#     chi2_lepton_numberOfMatchedStations:
#         expression: (all_leptons_by_pt_1_normalizedChi2 > 10)*all_leptons_by_pt_1_numberOfMatchedStations + (all_leptons_by_pt_2_normalizedChi2 > 10)*all_leptons_by_pt_2_numberOfMatchedStations
#         axis labels: ['High chi2 lepton numberOfMatchedStations', Events]
#         binning: [7, -0.5, 6.5]

#     chi2_lepton_isTrackerMuon:
#         expression: (all_leptons_by_pt_1_normalizedChi2 > 10)*all_leptons_by_pt_1_isTrackerMuon + (all_leptons_by_pt_2_normalizedChi2 > 10)*all_leptons_by_pt_2_isTrackerMuon
#         axis labels: ['High chi2 lepton isTrackerMuon', Events]
#         binning: [2, -0.5, 1.5]

#     chi2_lepton_isGlobalMuon:
#         expression: (all_leptons_by_pt_1_normalizedChi2 > 10)*all_leptons_by_pt_1_isGlobalMuon + (all_leptons_by_pt_2_normalizedChi2 > 10)*all_leptons_by_pt_2_isGlobalMuon
#         axis labels: ['High chi2 lepton isGlobalMuon', Events]
#         binning: [2, -0.5, 1.5]

#     chi2_lepton_numberOfValidMuonHits:
#         expression: (all_leptons_by_pt_1_normalizedChi2 > 10)*all_leptons_by_pt_1_numberOfValidMuonHits + (all_leptons_by_pt_2_normalizedChi2 > 10)*all_leptons_by_pt_2_numberOfValidMuonHits
#         axis labels: ['High chi2 lepton numberOfValidMuonHits', Events]
#         binning: [16, 0, 48]

#     chi2_lepton_normalizedChi2:
#         expression: (all_leptons_by_pt_1_normalizedChi2 > 10)*all_leptons_by_pt_1_normalizedChi2 + (all_leptons_by_pt_2_normalizedChi2 > 10)*all_leptons_by_pt_2_normalizedChi2
#         axis labels: ['High chi2 lepton normalizedChi2', Events]
#         binning: [30, 0, 60]

#     chi2_lepton_isGlobalMuonPromptTight:
#         expression: (all_leptons_by_pt_1_normalizedChi2 > 10)*all_leptons_by_pt_1_isGlobalMuonPromptTight + (all_leptons_by_pt_2_normalizedChi2 > 10)*all_leptons_by_pt_2_isGlobalMuonPromptTight
#         axis labels: ['High chi2 lepton isGlobalMuonPromptTight', Events]
#         binning: [2, -0.5, 1.5]

#     chi2_lepton_isGoodMuon_1StationTight:
#         expression: (all_leptons_by_pt_1_normalizedChi2 > 10)*all_leptons_by_pt_1_isGoodMuon_1StationTight + (all_leptons_by_pt_2_normalizedChi2 > 10)*all_leptons_by_pt_2_isGoodMuon_1StationTight
#         axis labels: ['High chi2 lepton isGoodMuon_1StationTight', Events]
#         binning: [2, -0.5, 1.5]

#     chi2_lepton_numberOfValidTrackerHits:
#         expression: (all_leptons_by_pt_1_normalizedChi2 > 10)*all_leptons_by_pt_1_numberOfValidTrackerHits + (all_leptons_by_pt_2_normalizedChi2 > 10)*all_leptons_by_pt_2_numberOfValidTrackerHits
#         axis labels: ['High chi2 lepton numberOfValidTrackerHits', Events]
#         binning: [12, 0, 24]

#     chi2_lepton_numberOfLayersWithMeasurement:
#         expression: (all_leptons_by_pt_1_normalizedChi2 > 10)*all_leptons_by_pt_1_numberOfLayersWithMeasurement + (all_leptons_by_pt_2_normalizedChi2 > 10)*all_leptons_by_pt_2_numberOfLayersWithMeasurement
#         axis labels: ['High chi2 lepton numberOfLayersWithMeasurement', Events]
#         binning: [8, 0, 16]
#     #####################
#     ## End high chi2 lepton
#     #####################
    
    jets_by_pt_1_pt:
        expression: jets_by_pt_1_pt
        axis labels: ['First jet pT', Events]
        binning: [*default_num_bins, 20, 300]

    jets_by_pt_2_pt:
        expression: jets_by_pt_2_pt
        axis labels: ['Second jet pT', Events]
        binning: [*default_num_bins, 20, 250]

    min_mass_leplep:
        expression: min_mass_leplep_all
        axis labels: ['min dilepton mass', Events]
        binning: [*default_num_bins, 10, 210]

    deltaR_leplep:
        expression: abs(deltaR_leplep_all)
        axis labels: ['deltaR between leptons', Events]
        binning: [*default_num_bins, 0, 6]

    deltaEta_leplep:
        expression: abs(deltaEta_leplep_all)
        axis labels: ['deltaEta between leptons', Events]
        binning: [*default_num_bins, 0, 5]

    deltaPhi_leplep:
        expression: sqrt(pow(deltaR_leplep_all,2) - pow(deltaEta_leplep_all,2))
        axis labels: ['deltaPhi between leptons', Events]
        binning: [*default_num_bins, 0, 3.2]

    mass_lep1_lep2:
        expression: mass_lep1_lep2
        axis labels: ['lep1-lep2 mass', Events]
        binning: [*default_num_bins, 81, 101]

    met_pt:
        expression: met_pt
        axis labels: ['MET', Events]
        binning: [*default_num_bins, 0, 200]

    mht:
        expression: mht
        axis labels: ['MHT', Events]
        binning: [*default_num_bins, 0, 200]

    met_ld:
        expression: met_pt*0.6 + mht*0.4
        axis labels: ['MetLD', Events]
        binning: [*default_num_bins, 0, 200]

#     sum_pt:
#         expression: sum_pt
#         axis labels: ['Sum pT', Events]
#         binning: [*default_num_bins, 100, 1100]

#     sum_jet_pt:
#         expression: sum_jet_pt
#         axis labels: ['Sum jet pT', Events]
#         binning: [*default_num_bins, 0, 1000]

#     mass_of_jets:
#         expression: mass_of_jets
#         axis labels: ['Mass of all jets', Events]
#         binning: [*default_num_bins, 0, 1200]

#     jets_MT_mass_ratio:
#         expression: MT_of_jets / mass_of_jets
#         axis labels: ['MT/mass of all jets', Events]
#         binning: [*default_num_bins, 0, 1]

#     everything_MT_mass_ratio:
#         expression: MT_of_everything / mass_of_everything
#         axis labels: ['MT/mass of everything', Events]
#         binning: [*default_num_bins, 0, 1]

    MT_of_everything:
        expression: MT_of_everything
        axis labels: ['MT of everything', Events]
        binning: [*default_num_bins, 200, 1200]

    ttbar_fake_SS_top_MT_met_lep_B:
        expression: ttbar_fake_SS_top_MT_met_lep_B
        axis labels: ['ttbar fake leptonic top MT', Events]
        binning: [*default_num_bins, 0, 300]

    ttbar_fake_SS_top_mass_blep_qq:
        expression: ttbar_fake_SS_top_mass_blep_qq
        axis labels: ['ttbar fake hadronic top mass', Events]
        binning: [*default_num_bins, 60, 460]

    jets_by_CSV_2_btagCombinedSecVertex:
        expression: jets_by_CSV_2_btagCombinedSecVertex
        axis labels: ['second highest jet CSV', Events]
        binning: [11, -0.1, 1]

#     Match_ttbar_fake_SS_Bq:
#         expression: Match_ttbar_fake_SS_Bq
#         axis labels: ['match score ttbar Bq', Events]
#         binning: [*default_num_bins, -6, 2]

    Match_ttbar_fake_SS_Bqq:
        expression: Match_ttbar_fake_SS_Bqq
        axis labels: ['match score ttbar Bqq', Events]
        binning: [*default_num_bins, -8, 2]

#     Match_ttW_SS_Bb:
#         expression: Match_ttW_SS_Bb
#         axis labels: ['match score ttW Bb', Events]
#         binning: [*default_num_bins, -4, 2]

#     Match_ttW_SS_Bq:
#         expression: Match_ttW_SS_Bq
#         axis labels: ['match score ttW Bq', Events]
#         binning: [*default_num_bins, -4, 2]

#     Match_ttW_SS_bq:
#         expression: Match_ttW_SS_bq
#         axis labels: ['match score ttW bq', Events]
#         binning: [*default_num_bins, -6, 2]

    Match_ttW_SS_Bbq:
        expression: Match_ttW_SS_Bbq
        axis labels: ['match score ttW Bbq', Events]
        binning: [*default_num_bins, -4, 2]

    Match_ttW_SS_Bqq:
        expression: Match_ttW_SS_Bqq
        axis labels: ['match score ttW Bqq', Events]
        binning: [*default_num_bins, -8, 2]

#     Match_ttW_SS_bqq:
#         expression: Match_ttW_SS_bqq
#         axis labels: ['match score ttW bqq', Events]
#         binning: [*default_num_bins, -4, 2]

    Match_ttW_SS_Bbqq:
        expression: Match_ttW_SS_Bbqq
        axis labels: ['match score ttW Bbqq', Events]
        binning: [*default_num_bins, -13, 2]

    FinalBDT_QCD:
        expression: FinalBDT_ttW_SS_Oct31_QCD
        axis labels: ['final BDT vs. QCD', Events]
        binning: [*default_num_bins, -1, 1]

    FinalBDT:
        expression: max(-0.69,min(0.69,FinalBDT_ttW_SS))
        axis labels: ['final BDT', Events]
        binning: [7, -0.7, 0.7]

    FinalBDT_left:
        expression: max(-0.89,min(0.49,FinalBDT_ttW_SS))
        axis labels: ['final BDT (left)', Events]
        binning: [7, -0.9, 0.5]

    FinalBDT_4bin:
        expression: max(-0.89,min(0.69,FinalBDT_ttW_SS))
        axis labels: ['final BDT (4 bins)', Events]
        binning: [4, -0.9, 0.7]

    FinalBDT_8bin:
        expression: max(-0.89,min(0.69,FinalBDT_ttW_SS))
        axis labels: ['final BDT (8 bins)', Events]
        binning: [8, -0.9, 0.7]

    FinalBDT_blind:
        expression: max(-0.69,min(0.69,FinalBDT_ttW_SS))
        axis labels: ['final BDT (blind)', Events]
        binning: [5, -0.7, 0.3]

#     FinalBDT_Oct31:
#         expression: FinalBDT_ttW_SS_Oct31
#         axis labels: ['final BDT Oct 31', Events]
#         binning: [8, -1, 1]

#     FinalBDT_Oct31_blind:
#         expression: FinalBDT_ttW_SS_Oct31
#         axis labels: ['final BDT Oct 31', Events]
#         binning: [6, -1, 0.5]

limits distributions:
#     twoBins:
#         expression: all_leptons_by_pt_1_eta
#         axis labels: ['first lepton eta', Events]
#         binning: [2, -5, 5]

#     numJets:
#         expression: max(3, min(6, numJets))
#         axis labels: ['number of jets', Events]
#         binning: [4, 2.5, 6.5]

#     numMediumBJets:
#         expression: max(0, min(2, numMediumBJets))
#         axis labels: ['number of medium b-tagged jets', Events]
#         binning: [3, -0.5, 2.5]

## Standard FinalBDT (Jan 23)
    FinalBDT:
        expression: max(-0.69,min(0.69,FinalBDT_ttW_SS))
        axis labels: ['final BDT', Events]
        binning: [7, -0.7, 0.7]

# ## Re-binned FinalBDT for eq3j, mu_mu channel (Feb 26)
#     FinalBDT:
#         expression: max(-0.69,min(0.69,FinalBDT_ttW_SS))
#         axis labels: ['final BDT', Events]
#         binning: [6, [-0.7, -0.5, -0.3, -0.1, 0.1, 0.3, 0.7]]

# ## Re-binned FinalBDT
#     FinalBDT:
#         expression: max(-0.89,min(0.69,FinalBDT_ttW_SS))
#         axis labels: ['final BDT', Events]
#         binning: [4, -0.9, 0.7]

    FinalBDT_blind:
        expression: max(-0.69,min(0.69,FinalBDT_ttW_SS))
        axis labels: ['final BDT', Events]
        binning: [5, -0.7, 0.3]


